<?xml version="1.0" encoding="utf-8"?>
<project title="cakephp-database-backup" version="2.9.1">
  <partials/>
  <file path="Utility/BackupExport.php" generated-path="Utility.BackupExport.html" hash="56689d27f2c2fd791630bb5e55837f56" package="Default">
    <docblock line="0">
      <description>This file is part of cakephp-database-backup.</description>
      <long-description>Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Mirko Pagliai"/>
      <tag name="link" line="0" description="https://github.com/mirko-pagliai/cakephp-database-backup" link="https://github.com/mirko-pagliai/cakephp-database-backup"/>
      <tag name="license" line="0" description="MIT License" link="https://opensource.org/licenses/mit-license.php"/>
      <tag name="see" line="0" description="" link="https://github.com/mirko-pagliai/cakephp-database-backup/wiki/How-to-use-the-BackupExport-utility"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Configure">\Cake\Core\Configure</namespace-alias>
    <namespace-alias name="BackupTrait">\DatabaseBackup\BackupTrait</namespace-alias>
    <namespace-alias name="InvalidArgumentException">\InvalidArgumentException</namespace-alias>
    <namespace-alias name="Filesystem">\Symfony\Component\Filesystem\Filesystem</namespace-alias>
    <class final="false" abstract="false" namespace="DatabaseBackup\Utility" line="24" package="Default">
      <extends/>
      <name>BackupExport</name>
      <full_name>\DatabaseBackup\Utility\BackupExport</full_name>
      <docblock line="24">
        <description>Utility to export databases</description>
        <long-description></long-description>
        <tag name="package" line="24" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="DatabaseBackup\Utility" line="32" package="Default">
        <name>$BackupManager</name>
        <full_name>\DatabaseBackup\Utility\BackupExport::$BackupManager</full_name>
        <default></default>
        <docblock line="32">
          <description>`BackupManager` instance</description>
          <long-description></long-description>
          <tag name="var" line="32" description="" type="\DatabaseBackup\Utility\BackupManager" variable="">
            <type>\DatabaseBackup\Utility\BackupManager</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="DatabaseBackup\Utility" line="38" package="Default">
        <name>$compression</name>
        <full_name>\DatabaseBackup\Utility\BackupExport::$compression</full_name>
        <default>null</default>
        <docblock line="38">
          <description>Compression type</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="string|null" variable="">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="DatabaseBackup\Utility" line="44" package="Default">
        <name>$config</name>
        <full_name>\DatabaseBackup\Utility\BackupExport::$config</full_name>
        <default></default>
        <docblock line="44">
          <description>Database configuration</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="DatabaseBackup\Utility" line="50" package="Default">
        <name>$defaultExtension</name>
        <full_name>\DatabaseBackup\Utility\BackupExport::$defaultExtension</full_name>
        <default>'sql'</default>
        <docblock line="50">
          <description>Default extension</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="DatabaseBackup\Utility" line="58" package="Default">
        <name>$driver</name>
        <full_name>\DatabaseBackup\Utility\BackupExport::$driver</full_name>
        <default></default>
        <docblock line="58">
          <description>Driver containing all methods to export/import database backups
 according to the database engine</description>
          <long-description></long-description>
          <tag name="since" line="58" description="2.0.0"/>
          <tag name="var" line="58" description="" type="object" variable="">
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="DatabaseBackup\Utility" line="64" package="Default">
        <name>$emailRecipient</name>
        <full_name>\DatabaseBackup\Utility\BackupExport::$emailRecipient</full_name>
        <default>null</default>
        <docblock line="64">
          <description>Recipient of the email, if you want to send the backup via mail</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="string|null" variable="">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="DatabaseBackup\Utility" line="70" package="Default">
        <name>$extension</name>
        <full_name>\DatabaseBackup\Utility\BackupExport::$extension</full_name>
        <default></default>
        <docblock line="70">
          <description>Filename extension</description>
          <long-description></long-description>
          <tag name="var" line="70" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="DatabaseBackup\Utility" line="76" package="Default">
        <name>$filename</name>
        <full_name>\DatabaseBackup\Utility\BackupExport::$filename</full_name>
        <default></default>
        <docblock line="76">
          <description>Filename where to export the database</description>
          <long-description></long-description>
          <tag name="var" line="76" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="DatabaseBackup\Utility" line="83" package="Default">
        <name>$rotate</name>
        <full_name>\DatabaseBackup\Utility\BackupExport::$rotate</full_name>
        <default>0</default>
        <docblock line="83">
          <description>Rotate limit. This is the number of backups you want to keep. So, it
 will delete all backups that are older.</description>
          <long-description></long-description>
          <tag name="var" line="83" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="DatabaseBackup\Utility" line="33" package="Default">
        <name>$validExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::$validExtensions</full_name>
        <default>array('sql.bz2' =&gt; 'bzip2', 'sql.gz' =&gt; 'gzip', 'sql' =&gt; false)</default>
        <docblock line="33">
          <description>Valid extensions. Names as keys and compressions as values</description>
          <long-description></long-description>
          <tag name="since" line="33" description="2.4.0"/>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="91" package="Default">
        <name>__construct</name>
        <full_name>\DatabaseBackup\Utility\BackupExport::__construct()</full_name>
        <docblock line="91">
          <description>Construct</description>
          <long-description></long-description>
          <tag name="uses" line="91" description="" link="\DatabaseBackup\Utility\BackupExport::$BackupManager"/>
          <tag name="uses" line="91" description="" link="\DatabaseBackup\Utility\BackupExport::$config"/>
          <tag name="uses" line="91" description="" link="\DatabaseBackup\Utility\BackupExport::$driver"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="111" package="Default">
        <name>compression</name>
        <full_name>\DatabaseBackup\Utility\BackupExport::compression()</full_name>
        <docblock line="111">
          <description>Sets the compression</description>
          <long-description></long-description>
          <tag name="param" line="111" description="&lt;p&gt;Compression type name. Supported&#10;values are &lt;code&gt;bzip2&lt;/code&gt; and &lt;code&gt;gzip&lt;/code&gt;. Use &lt;code&gt;null&lt;/code&gt; for no compression&lt;/p&gt;" type="string|null" variable="$compression">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="111" description="" type="\DatabaseBackup\Utility\BackupExport">
            <type>\DatabaseBackup\Utility\BackupExport</type>
          </tag>
          <tag name="see" line="111" description="" link="https://github.com/mirko-pagliai/cakephp-database-backup/wiki/How-to-use-the-BackupExport-utility#compression"/>
          <tag name="throws" line="111" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="111" description="" link="\DatabaseBackup\Utility\getValidCompressions()"/>
          <tag name="uses" line="111" description="" link="\DatabaseBackup\Utility\BackupExport::$compression"/>
          <tag name="uses" line="111" description="" link="\DatabaseBackup\Utility\BackupExport::$defaultExtension"/>
          <tag name="uses" line="111" description="" link="\DatabaseBackup\Utility\BackupExport::$extension"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$compression</name>
          <default></default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="143" package="Default">
        <name>filename</name>
        <full_name>\DatabaseBackup\Utility\BackupExport::filename()</full_name>
        <docblock line="143">
          <description>Sets the filename.</description>
          <long-description>The compression type will be automatically setted by the filename.</long-description>
          <tag name="param" line="143" description="&lt;p&gt;Filename. It can be an absolute path and may&#10; contain patterns&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="143" description="" type="\DatabaseBackup\Utility\BackupExport">
            <type>\DatabaseBackup\Utility\BackupExport</type>
          </tag>
          <tag name="see" line="143" description="" link="https://github.com/mirko-pagliai/cakephp-database-backup/wiki/How-to-use-the-BackupExport-utility#filename"/>
          <tag name="throws" line="143" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="throws" line="143" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="throws" line="143" description="" type="\Tools\Exception\NotWritableException">
            <type>\Tools\Exception\NotWritableException</type>
          </tag>
          <tag name="uses" line="143" description="" link="\DatabaseBackup\Utility\compression()"/>
          <tag name="uses" line="143" description="" link="\DatabaseBackup\Utility\BackupExport::$config"/>
          <tag name="uses" line="143" description="" link="\DatabaseBackup\Utility\BackupExport::$filename"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="180" package="Default">
        <name>rotate</name>
        <full_name>\DatabaseBackup\Utility\BackupExport::rotate()</full_name>
        <docblock line="180">
          <description>Sets the number of backups you want to keep. So, it will delete all
backups that are older</description>
          <long-description></long-description>
          <tag name="param" line="180" description="&lt;p&gt;Number of backups you want to keep&lt;/p&gt;" type="integer" variable="$rotate">
            <type>integer</type>
          </tag>
          <tag name="return" line="180" description="" type="\DatabaseBackup\Utility\BackupExport">
            <type>\DatabaseBackup\Utility\BackupExport</type>
          </tag>
          <tag name="see" line="180" description="" link="https://github.com/mirko-pagliai/cakephp-database-backup/wiki/How-to-use-the-BackupExport-utility#rotate"/>
          <tag name="uses" line="180" description="" link="\DatabaseBackup\Utility\BackupExport::$rotate"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rotate</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="194" package="Default">
        <name>send</name>
        <full_name>\DatabaseBackup\Utility\BackupExport::send()</full_name>
        <docblock line="194">
          <description>Sets the recipient's email address to send the backup file via mail</description>
          <long-description></long-description>
          <tag name="param" line="194" description="&lt;p&gt;Recipient's email address or &lt;code&gt;null&lt;/code&gt; to disable&lt;/p&gt;" type="string|null" variable="$recipient">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="194" description="" type="\DatabaseBackup\Utility\BackupExport">
            <type>\DatabaseBackup\Utility\BackupExport</type>
          </tag>
          <tag name="since" line="194" description="1.1.0"/>
          <tag name="uses" line="194" description="" link="\DatabaseBackup\Utility\BackupExport::$emailRecipient"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$recipient</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="213" package="Default">
        <name>export</name>
        <full_name>\DatabaseBackup\Utility\BackupExport::export()</full_name>
        <docblock line="213">
          <description>Exports the database</description>
          <long-description></long-description>
          <tag name="return" line="213" description="Filename path" type="string">
            <type>string</type>
          </tag>
          <tag name="see" line="213" description="" link="https://github.com/mirko-pagliai/cakephp-database-backup/wiki/How-to-use-the-BackupExport-utility#export"/>
          <tag name="uses" line="213" description="" link="\DatabaseBackup\Utility\filename()"/>
          <tag name="uses" line="213" description="" link="\DatabaseBackup\Utility\$BackupManager;"/>
          <tag name="uses" line="213" description="" link="\DatabaseBackup\Utility\BackupExport::$defaultExtension"/>
          <tag name="uses" line="213" description="" link="\DatabaseBackup\Utility\BackupExport::$emailRecipient"/>
          <tag name="uses" line="213" description="" link="\DatabaseBackup\Utility\BackupExport::$filename"/>
          <tag name="uses" line="213" description="" link="\DatabaseBackup\Utility\BackupExport::$extension"/>
          <tag name="uses" line="213" description="" link="\DatabaseBackup\Utility\BackupExport::$rotate"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="41" package="Default">
        <name>getAbsolutePath</name>
        <full_name>\DatabaseBackup\BackupTrait::getAbsolutePath()</full_name>
        <docblock line="41">
          <description>Returns an absolute path</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;Relative or absolute path&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\BackupTrait::getTarget()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="53" package="Default">
        <name>getBinary</name>
        <full_name>\DatabaseBackup\BackupTrait::getBinary()</full_name>
        <docblock line="53">
          <description>Gets a binary path</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Binary name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="53" description="2.0.0"/>
          <tag name="throws" line="53" description="" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="68" package="Default">
        <name>getCompression</name>
        <full_name>\DatabaseBackup\BackupTrait::getCompression()</full_name>
        <docblock line="68">
          <description>Returns the compression type from a filename</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="Compression type as string or `null`" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getExtension()"/>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getValidCompressions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="82" package="Default">
        <name>getConnection</name>
        <full_name>\DatabaseBackup\BackupTrait::getConnection()</full_name>
        <docblock line="82">
          <description>Gets the connection array</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Connection name&lt;/p&gt;" type="string|null" variable="$name">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="82" description="A connection object" type="\Cake\Datasource\ConnectionInterface">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="97" package="Default">
        <name>getDriver</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriver()</full_name>
        <docblock line="97">
          <description>Gets the driver instance containing all methods to export/import database
 backups, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="97" description="The driver instance" type="object">
            <type>object</type>
          </tag>
          <tag name="since" line="97" description="2.0.0"/>
          <tag name="throws" line="97" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getDriverName()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="118" package="Default">
        <name>getDriverName</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriverName()</full_name>
        <docblock line="118">
          <description>Gets the driver name, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="118" description="The driver name" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="118" description="2.6.2"/>
          <tag name="uses" line="118" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="132" package="Default">
        <name>getExtension</name>
        <full_name>\DatabaseBackup\BackupTrait::getExtension()</full_name>
        <docblock line="132">
          <description>Returns the extension from a filename</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="132" description="Extension or `null` if the extension is not found or&#10; if is an invalid extension" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="132" description="" link="\DatabaseBackup\BackupTrait::getValidExtensions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="143" package="Default">
        <name>getTarget</name>
        <full_name>\DatabaseBackup\BackupTrait::getTarget()</full_name>
        <docblock line="143">
          <description>Returns the target path</description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="154" package="Default">
        <name>getValidCompressions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidCompressions()</full_name>
        <docblock line="154">
          <description>Returns all valid compressions</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="154" description="2.4.0"/>
          <tag name="uses" line="154" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="165" package="Default">
        <name>getValidExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidExtensions()</full_name>
        <docblock line="165">
          <description>Returns all valid extensions</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="165" description="2.4.0"/>
          <tag name="uses" line="165" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
    </class>
  </file>
  <file path="Command/DeleteAllCommand.php" generated-path="Command.DeleteAllCommand.html" hash="6deab26d5ae11d59cc5b1f4f4751d7ad" package="Default">
    <docblock line="0">
      <description>This file is part of cakephp-database-backup.</description>
      <long-description>Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Mirko Pagliai"/>
      <tag name="link" line="0" description="https://github.com/mirko-pagliai/cakephp-database-backup" link="https://github.com/mirko-pagliai/cakephp-database-backup"/>
      <tag name="license" line="0" description="MIT License" link="https://opensource.org/licenses/mit-license.php"/>
      <tag name="since" line="0" description="2.6.0"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Arguments">\Cake\Console\Arguments</namespace-alias>
    <namespace-alias name="ConsoleIo">\Cake\Console\ConsoleIo</namespace-alias>
    <namespace-alias name="ConsoleOptionParser">\Cake\Console\ConsoleOptionParser</namespace-alias>
    <namespace-alias name="Command">\DatabaseBackup\Console\Command</namespace-alias>
    <namespace-alias name="BackupManager">\DatabaseBackup\Utility\BackupManager</namespace-alias>
    <class final="false" abstract="false" namespace="DatabaseBackup\Command" line="25" package="Default">
      <extends>\DatabaseBackup\Console\Command</extends>
      <name>DeleteAllCommand</name>
      <full_name>\DatabaseBackup\Command\DeleteAllCommand</full_name>
      <docblock line="25">
        <description>Deletes all backup files</description>
        <long-description></long-description>
        <tag name="package" line="25" description="Default"/>
        <tag name="inherited_from" description="\DatabaseBackup\Console\Command" refers="\DatabaseBackup\Console\Command" link="/classes/DatabaseBackup.Console.Command.html"/>
      </docblock>
      <property static="true" visibility="private" namespace="DatabaseBackup\Command" line="33" package="Default">
        <name>$validExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::$validExtensions</full_name>
        <default>array('sql.bz2' =&gt; 'bzip2', 'sql.gz' =&gt; 'gzip', 'sql' =&gt; false)</default>
        <docblock line="33">
          <description>Valid extensions. Names as keys and compressions as values</description>
          <long-description></long-description>
          <tag name="since" line="33" description="2.4.0"/>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Command" line="32" package="Default">
        <name>buildOptionParser</name>
        <full_name>\DatabaseBackup\Command\DeleteAllCommand::buildOptionParser()</full_name>
        <docblock line="32">
          <description>Hook method for defining this command's option parser</description>
          <long-description></long-description>
          <tag name="param" line="32" description="&lt;p&gt;The parser to be defined&lt;/p&gt;" type="\Cake\Console\ConsoleOptionParser" variable="$parser">
            <type>\Cake\Console\ConsoleOptionParser</type>
          </tag>
          <tag name="return" line="32" description="" type="\Cake\Console\ConsoleOptionParser">
            <type>\Cake\Console\ConsoleOptionParser</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\Cake\Console\ConsoleOptionParser</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="45" package="Default">
        <name>execute</name>
        <full_name>\DatabaseBackup\Command\DeleteAllCommand::execute()</full_name>
        <docblock line="45">
          <description>Deletes all backup files</description>
          <long-description></long-description>
          <tag name="param" line="45" description="&lt;p&gt;The command arguments&lt;/p&gt;" type="\Cake\Console\Arguments" variable="$args">
            <type>\Cake\Console\Arguments</type>
          </tag>
          <tag name="param" line="45" description="&lt;p&gt;The console io&lt;/p&gt;" type="\Cake\Console\ConsoleIo" variable="$io">
            <type>\Cake\Console\ConsoleIo</type>
          </tag>
          <tag name="return" line="45" description="The exit code or null for success" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
          <tag name="see" line="45" description="" link="https://github.com/mirko-pagliai/cakephp-database-backup/wiki/How-to-use-the-BackupShell#delete_all"/>
          <tag name="uses" line="45" description="" link="\DatabaseBackup\Utility\BackupManager::deleteAll()"/>
          <tag name="inherited_from" description="\DatabaseBackup\Console\Command::execute()" refers="\DatabaseBackup\Console\Command::execute()" link="/classes/DatabaseBackup.Console.Command.html#method_execute"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>\Cake\Console\Arguments</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$io</name>
          <default></default>
          <type>\Cake\Console\ConsoleIo</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="34" package="Default">
        <name>execute</name>
        <full_name>\DatabaseBackup\Console\Command::execute()</full_name>
        <docblock line="34">
          <description>Implement this method with your command's logic</description>
          <long-description></long-description>
          <tag name="param" line="34" description="&lt;p&gt;The command arguments&lt;/p&gt;" type="\Cake\Console\Arguments" variable="$args">
            <type>\Cake\Console\Arguments</type>
          </tag>
          <tag name="param" line="34" description="&lt;p&gt;The console io&lt;/p&gt;" type="\Cake\Console\ConsoleIo" variable="$io">
            <type>\Cake\Console\ConsoleIo</type>
          </tag>
          <tag name="return" line="34" description="The exit code or null for success" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>\Cake\Console\Arguments</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$io</name>
          <default></default>
          <type>\Cake\Console\ConsoleIo</type>
        </argument>
        <inherited_from>\DatabaseBackup\Console\Command</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="41" package="Default">
        <name>getAbsolutePath</name>
        <full_name>\DatabaseBackup\BackupTrait::getAbsolutePath()</full_name>
        <docblock line="41">
          <description>Returns an absolute path</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;Relative or absolute path&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\BackupTrait::getTarget()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="53" package="Default">
        <name>getBinary</name>
        <full_name>\DatabaseBackup\BackupTrait::getBinary()</full_name>
        <docblock line="53">
          <description>Gets a binary path</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Binary name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="53" description="2.0.0"/>
          <tag name="throws" line="53" description="" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="68" package="Default">
        <name>getCompression</name>
        <full_name>\DatabaseBackup\BackupTrait::getCompression()</full_name>
        <docblock line="68">
          <description>Returns the compression type from a filename</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="Compression type as string or `null`" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getExtension()"/>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getValidCompressions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="82" package="Default">
        <name>getConnection</name>
        <full_name>\DatabaseBackup\BackupTrait::getConnection()</full_name>
        <docblock line="82">
          <description>Gets the connection array</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Connection name&lt;/p&gt;" type="string|null" variable="$name">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="82" description="A connection object" type="\Cake\Datasource\ConnectionInterface">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="97" package="Default">
        <name>getDriver</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriver()</full_name>
        <docblock line="97">
          <description>Gets the driver instance containing all methods to export/import database
 backups, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="97" description="The driver instance" type="object">
            <type>object</type>
          </tag>
          <tag name="since" line="97" description="2.0.0"/>
          <tag name="throws" line="97" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getDriverName()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="118" package="Default">
        <name>getDriverName</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriverName()</full_name>
        <docblock line="118">
          <description>Gets the driver name, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="118" description="The driver name" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="118" description="2.6.2"/>
          <tag name="uses" line="118" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="132" package="Default">
        <name>getExtension</name>
        <full_name>\DatabaseBackup\BackupTrait::getExtension()</full_name>
        <docblock line="132">
          <description>Returns the extension from a filename</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="132" description="Extension or `null` if the extension is not found or&#10; if is an invalid extension" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="132" description="" link="\DatabaseBackup\BackupTrait::getValidExtensions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="143" package="Default">
        <name>getTarget</name>
        <full_name>\DatabaseBackup\BackupTrait::getTarget()</full_name>
        <docblock line="143">
          <description>Returns the target path</description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="154" package="Default">
        <name>getValidCompressions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidCompressions()</full_name>
        <docblock line="154">
          <description>Returns all valid compressions</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="154" description="2.4.0"/>
          <tag name="uses" line="154" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="165" package="Default">
        <name>getValidExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidExtensions()</full_name>
        <docblock line="165">
          <description>Returns all valid extensions</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="165" description="2.4.0"/>
          <tag name="uses" line="165" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
    </class>
  </file>
  <file path="Command/ExportCommand.php" generated-path="Command.ExportCommand.html" hash="20b345871ea1babca3e241f4c9613d42" package="Default">
    <docblock line="0">
      <description>This file is part of cakephp-database-backup.</description>
      <long-description>Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Mirko Pagliai"/>
      <tag name="link" line="0" description="https://github.com/mirko-pagliai/cakephp-database-backup" link="https://github.com/mirko-pagliai/cakephp-database-backup"/>
      <tag name="license" line="0" description="MIT License" link="https://opensource.org/licenses/mit-license.php"/>
      <tag name="since" line="0" description="2.6.0"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Arguments">\Cake\Console\Arguments</namespace-alias>
    <namespace-alias name="ConsoleIo">\Cake\Console\ConsoleIo</namespace-alias>
    <namespace-alias name="ConsoleOptionParser">\Cake\Console\ConsoleOptionParser</namespace-alias>
    <namespace-alias name="RotateCommand">\DatabaseBackup\Command\RotateCommand</namespace-alias>
    <namespace-alias name="SendCommand">\DatabaseBackup\Command\SendCommand</namespace-alias>
    <namespace-alias name="Command">\DatabaseBackup\Console\Command</namespace-alias>
    <namespace-alias name="BackupExport">\DatabaseBackup\Utility\BackupExport</namespace-alias>
    <namespace-alias name="Exception">\Exception</namespace-alias>
    <class final="false" abstract="false" namespace="DatabaseBackup\Command" line="28" package="Default">
      <extends>\DatabaseBackup\Console\Command</extends>
      <name>ExportCommand</name>
      <full_name>\DatabaseBackup\Command\ExportCommand</full_name>
      <docblock line="28">
        <description>Exports a database backup</description>
        <long-description></long-description>
        <tag name="package" line="28" description="Default"/>
        <tag name="inherited_from" description="\DatabaseBackup\Console\Command" refers="\DatabaseBackup\Console\Command" link="/classes/DatabaseBackup.Console.Command.html"/>
      </docblock>
      <property static="true" visibility="private" namespace="DatabaseBackup\Command" line="33" package="Default">
        <name>$validExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::$validExtensions</full_name>
        <default>array('sql.bz2' =&gt; 'bzip2', 'sql.gz' =&gt; 'gzip', 'sql' =&gt; false)</default>
        <docblock line="33">
          <description>Valid extensions. Names as keys and compressions as values</description>
          <long-description></long-description>
          <tag name="since" line="33" description="2.4.0"/>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Command" line="35" package="Default">
        <name>buildOptionParser</name>
        <full_name>\DatabaseBackup\Command\ExportCommand::buildOptionParser()</full_name>
        <docblock line="35">
          <description>Hook method for defining this command's option parser</description>
          <long-description></long-description>
          <tag name="param" line="35" description="&lt;p&gt;The parser to be defined&lt;/p&gt;" type="\Cake\Console\ConsoleOptionParser" variable="$parser">
            <type>\Cake\Console\ConsoleOptionParser</type>
          </tag>
          <tag name="return" line="35" description="" type="\Cake\Console\ConsoleOptionParser">
            <type>\Cake\Console\ConsoleOptionParser</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\Cake\Console\ConsoleOptionParser</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="77" package="Default">
        <name>execute</name>
        <full_name>\DatabaseBackup\Command\ExportCommand::execute()</full_name>
        <docblock line="77">
          <description>Exports a database backup.</description>
          <long-description>This command uses `RotateCommand` and `SendCommand`.</long-description>
          <tag name="param" line="77" description="&lt;p&gt;The command arguments&lt;/p&gt;" type="\Cake\Console\Arguments" variable="$args">
            <type>\Cake\Console\Arguments</type>
          </tag>
          <tag name="param" line="77" description="&lt;p&gt;The console io&lt;/p&gt;" type="\Cake\Console\ConsoleIo" variable="$io">
            <type>\Cake\Console\ConsoleIo</type>
          </tag>
          <tag name="return" line="77" description="The exit code or null for success" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
          <tag name="see" line="77" description="" link="https://github.com/mirko-pagliai/cakephp-database-backup/wiki/How-to-use-the-BackupShell#export"/>
          <tag name="uses" line="77" description="" link="\DatabaseBackup\Command\RotateCommand::execute()"/>
          <tag name="uses" line="77" description="" link="\DatabaseBackup\Command\SendCommand::execute()"/>
          <tag name="uses" line="77" description="" link="\DatabaseBackup\Utility\BackupExport::compression()"/>
          <tag name="uses" line="77" description="" link="\DatabaseBackup\Utility\BackupExport::export()"/>
          <tag name="uses" line="77" description="" link="\DatabaseBackup\Utility\BackupExport::filename()"/>
          <tag name="inherited_from" description="\DatabaseBackup\Console\Command::execute()" refers="\DatabaseBackup\Console\Command::execute()" link="/classes/DatabaseBackup.Console.Command.html#method_execute"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>\Cake\Console\Arguments</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$io</name>
          <default></default>
          <type>\Cake\Console\ConsoleIo</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="34" package="Default">
        <name>execute</name>
        <full_name>\DatabaseBackup\Console\Command::execute()</full_name>
        <docblock line="34">
          <description>Implement this method with your command's logic</description>
          <long-description></long-description>
          <tag name="param" line="34" description="&lt;p&gt;The command arguments&lt;/p&gt;" type="\Cake\Console\Arguments" variable="$args">
            <type>\Cake\Console\Arguments</type>
          </tag>
          <tag name="param" line="34" description="&lt;p&gt;The console io&lt;/p&gt;" type="\Cake\Console\ConsoleIo" variable="$io">
            <type>\Cake\Console\ConsoleIo</type>
          </tag>
          <tag name="return" line="34" description="The exit code or null for success" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>\Cake\Console\Arguments</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$io</name>
          <default></default>
          <type>\Cake\Console\ConsoleIo</type>
        </argument>
        <inherited_from>\DatabaseBackup\Console\Command</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="41" package="Default">
        <name>getAbsolutePath</name>
        <full_name>\DatabaseBackup\BackupTrait::getAbsolutePath()</full_name>
        <docblock line="41">
          <description>Returns an absolute path</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;Relative or absolute path&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\BackupTrait::getTarget()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="53" package="Default">
        <name>getBinary</name>
        <full_name>\DatabaseBackup\BackupTrait::getBinary()</full_name>
        <docblock line="53">
          <description>Gets a binary path</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Binary name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="53" description="2.0.0"/>
          <tag name="throws" line="53" description="" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="68" package="Default">
        <name>getCompression</name>
        <full_name>\DatabaseBackup\BackupTrait::getCompression()</full_name>
        <docblock line="68">
          <description>Returns the compression type from a filename</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="Compression type as string or `null`" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getExtension()"/>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getValidCompressions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="82" package="Default">
        <name>getConnection</name>
        <full_name>\DatabaseBackup\BackupTrait::getConnection()</full_name>
        <docblock line="82">
          <description>Gets the connection array</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Connection name&lt;/p&gt;" type="string|null" variable="$name">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="82" description="A connection object" type="\Cake\Datasource\ConnectionInterface">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="97" package="Default">
        <name>getDriver</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriver()</full_name>
        <docblock line="97">
          <description>Gets the driver instance containing all methods to export/import database
 backups, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="97" description="The driver instance" type="object">
            <type>object</type>
          </tag>
          <tag name="since" line="97" description="2.0.0"/>
          <tag name="throws" line="97" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getDriverName()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="118" package="Default">
        <name>getDriverName</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriverName()</full_name>
        <docblock line="118">
          <description>Gets the driver name, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="118" description="The driver name" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="118" description="2.6.2"/>
          <tag name="uses" line="118" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="132" package="Default">
        <name>getExtension</name>
        <full_name>\DatabaseBackup\BackupTrait::getExtension()</full_name>
        <docblock line="132">
          <description>Returns the extension from a filename</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="132" description="Extension or `null` if the extension is not found or&#10; if is an invalid extension" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="132" description="" link="\DatabaseBackup\BackupTrait::getValidExtensions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="143" package="Default">
        <name>getTarget</name>
        <full_name>\DatabaseBackup\BackupTrait::getTarget()</full_name>
        <docblock line="143">
          <description>Returns the target path</description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="154" package="Default">
        <name>getValidCompressions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidCompressions()</full_name>
        <docblock line="154">
          <description>Returns all valid compressions</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="154" description="2.4.0"/>
          <tag name="uses" line="154" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="165" package="Default">
        <name>getValidExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidExtensions()</full_name>
        <docblock line="165">
          <description>Returns all valid extensions</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="165" description="2.4.0"/>
          <tag name="uses" line="165" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
    </class>
  </file>
  <file path="Driver/Mysql.php" generated-path="Driver.Mysql.html" hash="ff4d765a577b4d299b81356c84d7b8d5" package="Default">
    <docblock line="0">
      <description>This file is part of cakephp-database-backup.</description>
      <long-description>Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Mirko Pagliai"/>
      <tag name="link" line="0" description="https://github.com/mirko-pagliai/cakephp-database-backup" link="https://github.com/mirko-pagliai/cakephp-database-backup"/>
      <tag name="license" line="0" description="MIT License" link="https://opensource.org/licenses/mit-license.php"/>
      <tag name="since" line="0" description="2.0.0"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Driver">\DatabaseBackup\Driver\Driver</namespace-alias>
    <class final="false" abstract="false" namespace="DatabaseBackup\Driver" line="21" package="Default">
      <extends>\DatabaseBackup\Driver\Driver</extends>
      <name>Mysql</name>
      <full_name>\DatabaseBackup\Driver\Mysql</full_name>
      <docblock line="21">
        <description>Mysql driver to export/import database backups</description>
        <long-description></long-description>
        <tag name="package" line="21" description="Default"/>
        <tag name="inherited_from" description="\DatabaseBackup\Driver\Driver" refers="\DatabaseBackup\Driver\Driver" link="/classes/DatabaseBackup.Driver.Driver.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="28" package="Default">
        <name>$auth</name>
        <full_name>\DatabaseBackup\Driver\Mysql::$auth</full_name>
        <default></default>
        <docblock line="28">
          <description>Temporary file with the database authentication data</description>
          <long-description></long-description>
          <tag name="since" line="28" description="2.1.0"/>
          <tag name="var" line="28" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="34" package="Default">
        <name>$connection</name>
        <full_name>\DatabaseBackup\Driver\Driver::$connection</full_name>
        <default></default>
        <docblock line="34">
          <description>A connection object</description>
          <long-description></long-description>
          <tag name="var" line="34" description="" type="\Cake\Datasource\ConnectionInterface" variable="">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="DatabaseBackup\Driver" line="33" package="Default">
        <name>$validExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::$validExtensions</full_name>
        <default>array('sql.bz2' =&gt; 'bzip2', 'sql.gz' =&gt; 'gzip', 'sql' =&gt; false)</default>
        <docblock line="33">
          <description>Valid extensions. Names as keys and compressions as values</description>
          <long-description></long-description>
          <tag name="since" line="33" description="2.4.0"/>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="36" package="Default">
        <name>_exportExecutable</name>
        <full_name>\DatabaseBackup\Driver\Mysql::_exportExecutable()</full_name>
        <docblock line="36">
          <description>Gets the executable command to export the database</description>
          <long-description></long-description>
          <tag name="return" line="36" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="36" description="" link="\DatabaseBackup\Driver\getConfig()"/>
          <tag name="uses" line="36" description="" link="\DatabaseBackup\Driver\Mysql::$auth"/>
          <tag name="inherited_from" description="\DatabaseBackup\Driver\Driver::_exportExecutable()" refers="\DatabaseBackup\Driver\Driver::_exportExecutable()" link="/classes/DatabaseBackup.Driver.Driver.html#method__exportExecutable"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="52" package="Default">
        <name>_importExecutable</name>
        <full_name>\DatabaseBackup\Driver\Mysql::_importExecutable()</full_name>
        <docblock line="52">
          <description>Gets the executable command to import the database</description>
          <long-description></long-description>
          <tag name="return" line="52" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="52" description="" link="\DatabaseBackup\Driver\getConfig()"/>
          <tag name="uses" line="52" description="" link="\DatabaseBackup\Driver\Mysql::$auth"/>
          <tag name="inherited_from" description="\DatabaseBackup\Driver\Driver::_importExecutable()" refers="\DatabaseBackup\Driver\Driver::_importExecutable()" link="/classes/DatabaseBackup.Driver.Driver.html#method__importExecutable"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="70" package="Default">
        <name>writeAuthFile</name>
        <full_name>\DatabaseBackup\Driver\Mysql::writeAuthFile()</full_name>
        <docblock line="70">
          <description>Internal method to write an auth file</description>
          <long-description></long-description>
          <tag name="param" line="70" description="&lt;p&gt;Content&lt;/p&gt;" type="string" variable="$content">
            <type>string</type>
          </tag>
          <tag name="return" line="70" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="since" line="70" description="2.3.0"/>
          <tag name="uses" line="70" description="" link="\DatabaseBackup\Driver\getConfig()"/>
          <tag name="uses" line="70" description="" link="\DatabaseBackup\Driver\Mysql::$auth"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$content</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="89" package="Default">
        <name>afterExport</name>
        <full_name>\DatabaseBackup\Driver\Mysql::afterExport()</full_name>
        <docblock line="89">
          <description>Called after export</description>
          <long-description></long-description>
          <tag name="return" line="89" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="since" line="89" description="2.1.0"/>
          <tag name="uses" line="89" description="" link="\DatabaseBackup\Driver\Mysql::deleteAuthFile()"/>
          <tag name="inherited_from" description="\DatabaseBackup\Driver\Driver::afterExport()" refers="\DatabaseBackup\Driver\Driver::afterExport()" link="/classes/DatabaseBackup.Driver.Driver.html#method_afterExport"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="100" package="Default">
        <name>afterImport</name>
        <full_name>\DatabaseBackup\Driver\Mysql::afterImport()</full_name>
        <docblock line="100">
          <description>Called after import</description>
          <long-description></long-description>
          <tag name="return" line="100" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="since" line="100" description="2.1.0"/>
          <tag name="uses" line="100" description="" link="\DatabaseBackup\Driver\Mysql::deleteAuthFile()"/>
          <tag name="inherited_from" description="\DatabaseBackup\Driver\Driver::afterImport()" refers="\DatabaseBackup\Driver\Driver::afterImport()" link="/classes/DatabaseBackup.Driver.Driver.html#method_afterImport"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="119" package="Default">
        <name>beforeExport</name>
        <full_name>\DatabaseBackup\Driver\Mysql::beforeExport()</full_name>
        <docblock line="119">
          <description>Called before export.</description>
          <long-description>It stores the authentication data, to be used to export the database, in
 a temporary file.

For security reasons, it's recommended to specify the password in a
 configuration file and not in the command (a user can execute a
 `ps aux | grep mysqldump` and see the password).
So it creates a temporary file to store the configuration options</long-description>
          <tag name="return" line="119" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="since" line="119" description="2.1.0"/>
          <tag name="uses" line="119" description="" link="\DatabaseBackup\Driver\Mysql::writeAuthFile()"/>
          <tag name="inherited_from" description="\DatabaseBackup\Driver\Driver::beforeExport()" refers="\DatabaseBackup\Driver\Driver::beforeExport()" link="/classes/DatabaseBackup.Driver.Driver.html#method_beforeExport"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="141" package="Default">
        <name>beforeImport</name>
        <full_name>\DatabaseBackup\Driver\Mysql::beforeImport()</full_name>
        <docblock line="141">
          <description>Called before export.</description>
          <long-description>It stores the authentication data, to be used to import the database, in
 a temporary file.

For security reasons, it's recommended to specify the password in
 a configuration file and not in the command (a user can execute
 a `ps aux | grep mysqldump` and see the password).
 So it creates a temporary file to store the configuration options</long-description>
          <tag name="return" line="141" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="since" line="141" description="2.1.0"/>
          <tag name="uses" line="141" description="" link="\DatabaseBackup\Driver\Mysql::writeAuthFile()"/>
          <tag name="inherited_from" description="\DatabaseBackup\Driver\Driver::beforeImport()" refers="\DatabaseBackup\Driver\Driver::beforeImport()" link="/classes/DatabaseBackup.Driver.Driver.html#method_beforeImport"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="155" package="Default">
        <name>deleteAuthFile</name>
        <full_name>\DatabaseBackup\Driver\Mysql::deleteAuthFile()</full_name>
        <docblock line="155">
          <description>Deletes the temporary file with the database authentication data</description>
          <long-description></long-description>
          <tag name="return" line="155" description="`true` on success" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="since" line="155" description="2.1.0"/>
          <tag name="uses" line="155" description="" link="\DatabaseBackup\Driver\Mysql::$auth"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="41" package="Default">
        <name>__construct</name>
        <full_name>\DatabaseBackup\Driver\Driver::__construct()</full_name>
        <docblock line="41">
          <description>Construct</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\Driver\Driver::$connection"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default></default>
          <type>\Cake\Datasource\ConnectionInterface</type>
        </argument>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="58" package="Default">
        <name>implementedEvents</name>
        <full_name>\DatabaseBackup\Driver\Driver::implementedEvents()</full_name>
        <docblock line="58">
          <description>List of events this object is implementing. When the class is registered
 in an event manager, each individual method will be associated with the
 respective event</description>
          <long-description></long-description>
          <tag name="return" line="58" description="Associative array or event key names pointing to the&#10; function that should be called in the object when the respective event&#10; is fired" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="58" description="2.1.1"/>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="72" package="Default">
        <name>_exportExecutable</name>
        <full_name>\DatabaseBackup\Driver\Driver::_exportExecutable()</full_name>
        <docblock line="72">
          <description>Gets the executable command to export the database</description>
          <long-description></long-description>
          <tag name="return" line="72" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="78" package="Default">
        <name>_importExecutable</name>
        <full_name>\DatabaseBackup\Driver\Driver::_importExecutable()</full_name>
        <docblock line="78">
          <description>Gets the executable command to import the database</description>
          <long-description></long-description>
          <tag name="return" line="78" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="85" package="Default">
        <name>afterExport</name>
        <full_name>\DatabaseBackup\Driver\Driver::afterExport()</full_name>
        <docblock line="85">
          <description>Called after export</description>
          <long-description></long-description>
          <tag name="return" line="85" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="since" line="85" description="2.1.0"/>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="94" package="Default">
        <name>afterImport</name>
        <full_name>\DatabaseBackup\Driver\Driver::afterImport()</full_name>
        <docblock line="94">
          <description>Called after import</description>
          <long-description></long-description>
          <tag name="return" line="94" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="since" line="94" description="2.1.0"/>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="103" package="Default">
        <name>beforeExport</name>
        <full_name>\DatabaseBackup\Driver\Driver::beforeExport()</full_name>
        <docblock line="103">
          <description>Called before export</description>
          <long-description></long-description>
          <tag name="return" line="103" description="Returns `false` to stop the export" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="since" line="103" description="2.1.0"/>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="113" package="Default">
        <name>beforeImport</name>
        <full_name>\DatabaseBackup\Driver\Driver::beforeImport()</full_name>
        <docblock line="113">
          <description>Called before import</description>
          <long-description></long-description>
          <tag name="return" line="113" description="Returns `false` to stop the import" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="since" line="113" description="2.1.0"/>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="124" package="Default">
        <name>_exportExecutableWithCompression</name>
        <full_name>\DatabaseBackup\Driver\Driver::_exportExecutableWithCompression()</full_name>
        <docblock line="124">
          <description>Gets the executable command to export the database, with compression</description>
          <long-description></long-description>
          <tag name="param" line="124" description="&lt;p&gt;Filename where you want to export the database&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="124" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="124" description="" link="\DatabaseBackup\Driver\Driver::_exportExecutable()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="147" package="Default">
        <name>_importExecutableWithCompression</name>
        <full_name>\DatabaseBackup\Driver\Driver::_importExecutableWithCompression()</full_name>
        <docblock line="147">
          <description>Gets the executable command to import the database, with compression</description>
          <long-description></long-description>
          <tag name="param" line="147" description="&lt;p&gt;Filename from which you want to import the database&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="147" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="147" description="" link="\DatabaseBackup\Driver\Driver::_importExecutable()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="176" package="Default">
        <name>export</name>
        <full_name>\DatabaseBackup\Driver\Driver::export()</full_name>
        <docblock line="176">
          <description>Exports the database.</description>
          <long-description>When exporting, this method will trigger these events:

- Backup.beforeExport: will be triggered before export
- Backup.afterExport: will be triggered after export</long-description>
          <tag name="param" line="176" description="&lt;p&gt;Filename where you want to export the database&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="176" description="true on success" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="176" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="uses" line="176" description="" link="\DatabaseBackup\Driver\Driver::_exportExecutableWithCompression()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="200" package="Default">
        <name>getConfig</name>
        <full_name>\DatabaseBackup\Driver\Driver::getConfig()</full_name>
        <docblock line="200">
          <description>Gets a config value or the whole configuration</description>
          <long-description></long-description>
          <tag name="param" line="200" description="&lt;p&gt;Config key or &lt;code&gt;null&lt;/code&gt; to get all config values&lt;/p&gt;" type="string|null" variable="$key">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="200" description="Config value, `null` if the key doesn't exist&#10; or all config values if no key was specified" type="array|string|null">
            <type>array</type>
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="since" line="200" description="2.3.0"/>
          <tag name="uses" line="200" description="" link="\DatabaseBackup\Driver\Driver::$connection"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="219" package="Default">
        <name>import</name>
        <full_name>\DatabaseBackup\Driver\Driver::import()</full_name>
        <docblock line="219">
          <description>Imports the database.</description>
          <long-description>When importing, this method will trigger these events:

- Backup.beforeImport: will be triggered before import
- Backup.afterImport: will be triggered after import</long-description>
          <tag name="param" line="219" description="&lt;p&gt;Filename from which you want to import the database&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="219" description="true on success" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="219" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="uses" line="219" description="" link="\DatabaseBackup\Driver\Driver::_importExecutableWithCompression()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="41" package="Default">
        <name>getAbsolutePath</name>
        <full_name>\DatabaseBackup\BackupTrait::getAbsolutePath()</full_name>
        <docblock line="41">
          <description>Returns an absolute path</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;Relative or absolute path&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\BackupTrait::getTarget()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="53" package="Default">
        <name>getBinary</name>
        <full_name>\DatabaseBackup\BackupTrait::getBinary()</full_name>
        <docblock line="53">
          <description>Gets a binary path</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Binary name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="53" description="2.0.0"/>
          <tag name="throws" line="53" description="" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="68" package="Default">
        <name>getCompression</name>
        <full_name>\DatabaseBackup\BackupTrait::getCompression()</full_name>
        <docblock line="68">
          <description>Returns the compression type from a filename</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="Compression type as string or `null`" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getExtension()"/>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getValidCompressions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="82" package="Default">
        <name>getConnection</name>
        <full_name>\DatabaseBackup\BackupTrait::getConnection()</full_name>
        <docblock line="82">
          <description>Gets the connection array</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Connection name&lt;/p&gt;" type="string|null" variable="$name">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="82" description="A connection object" type="\Cake\Datasource\ConnectionInterface">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="97" package="Default">
        <name>getDriver</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriver()</full_name>
        <docblock line="97">
          <description>Gets the driver instance containing all methods to export/import database
 backups, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="97" description="The driver instance" type="object">
            <type>object</type>
          </tag>
          <tag name="since" line="97" description="2.0.0"/>
          <tag name="throws" line="97" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getDriverName()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="118" package="Default">
        <name>getDriverName</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriverName()</full_name>
        <docblock line="118">
          <description>Gets the driver name, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="118" description="The driver name" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="118" description="2.6.2"/>
          <tag name="uses" line="118" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="132" package="Default">
        <name>getExtension</name>
        <full_name>\DatabaseBackup\BackupTrait::getExtension()</full_name>
        <docblock line="132">
          <description>Returns the extension from a filename</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="132" description="Extension or `null` if the extension is not found or&#10; if is an invalid extension" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="132" description="" link="\DatabaseBackup\BackupTrait::getValidExtensions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="143" package="Default">
        <name>getTarget</name>
        <full_name>\DatabaseBackup\BackupTrait::getTarget()</full_name>
        <docblock line="143">
          <description>Returns the target path</description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="154" package="Default">
        <name>getValidCompressions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidCompressions()</full_name>
        <docblock line="154">
          <description>Returns all valid compressions</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="154" description="2.4.0"/>
          <tag name="uses" line="154" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="165" package="Default">
        <name>getValidExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidExtensions()</full_name>
        <docblock line="165">
          <description>Returns all valid extensions</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="165" description="2.4.0"/>
          <tag name="uses" line="165" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
    </class>
  </file>
  <file path="Driver/Postgres.php" generated-path="Driver.Postgres.html" hash="ec4f2ee50caa62aba9d19a342b1e931a" package="Default">
    <docblock line="0">
      <description>This file is part of cakephp-database-backup.</description>
      <long-description>Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Mirko Pagliai"/>
      <tag name="link" line="0" description="https://github.com/mirko-pagliai/cakephp-database-backup" link="https://github.com/mirko-pagliai/cakephp-database-backup"/>
      <tag name="license" line="0" description="MIT License" link="https://opensource.org/licenses/mit-license.php"/>
      <tag name="since" line="0" description="2.1.0"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Driver">\DatabaseBackup\Driver\Driver</namespace-alias>
    <class final="false" abstract="false" namespace="DatabaseBackup\Driver" line="21" package="Default">
      <extends>\DatabaseBackup\Driver\Driver</extends>
      <name>Postgres</name>
      <full_name>\DatabaseBackup\Driver\Postgres</full_name>
      <docblock line="21">
        <description>Postgres driver to export/import database backups</description>
        <long-description></long-description>
        <tag name="package" line="21" description="Default"/>
        <tag name="inherited_from" description="\DatabaseBackup\Driver\Driver" refers="\DatabaseBackup\Driver\Driver" link="/classes/DatabaseBackup.Driver.Driver.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="34" package="Default">
        <name>$connection</name>
        <full_name>\DatabaseBackup\Driver\Driver::$connection</full_name>
        <default></default>
        <docblock line="34">
          <description>A connection object</description>
          <long-description></long-description>
          <tag name="var" line="34" description="" type="\Cake\Datasource\ConnectionInterface" variable="">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="DatabaseBackup\Driver" line="33" package="Default">
        <name>$validExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::$validExtensions</full_name>
        <default>array('sql.bz2' =&gt; 'bzip2', 'sql.gz' =&gt; 'gzip', 'sql' =&gt; false)</default>
        <docblock line="33">
          <description>Valid extensions. Names as keys and compressions as values</description>
          <long-description></long-description>
          <tag name="since" line="33" description="2.4.0"/>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="35" package="Default">
        <name>getDbnameAsString</name>
        <full_name>\DatabaseBackup\Driver\Postgres::getDbnameAsString()</full_name>
        <docblock line="35">
          <description>Gets the value for the `--dbname` option for export and import
 executables as string. It contains the connection string with username,
 password and hostname.</description>
          <long-description>It returns something like:
&lt;code&gt;
postgresql://postgres@localhost/travis_ci_test
&lt;/code&gt;</long-description>
          <tag name="return" line="35" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="35" description="" link="\DatabaseBackup\Driver\getConfig()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="51" package="Default">
        <name>_exportExecutable</name>
        <full_name>\DatabaseBackup\Driver\Postgres::_exportExecutable()</full_name>
        <docblock line="51">
          <description>Gets the executable command to export the database</description>
          <long-description></long-description>
          <tag name="return" line="51" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="51" description="" link="\DatabaseBackup\Driver\Postgres::getDbnameAsString()"/>
          <tag name="inherited_from" description="\DatabaseBackup\Driver\Driver::_exportExecutable()" refers="\DatabaseBackup\Driver\Driver::_exportExecutable()" link="/classes/DatabaseBackup.Driver.Driver.html#method__exportExecutable"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="61" package="Default">
        <name>_importExecutable</name>
        <full_name>\DatabaseBackup\Driver\Postgres::_importExecutable()</full_name>
        <docblock line="61">
          <description>Gets the executable command to import the database</description>
          <long-description></long-description>
          <tag name="return" line="61" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="61" description="" link="\DatabaseBackup\Driver\Postgres::getDbnameAsString()"/>
          <tag name="inherited_from" description="\DatabaseBackup\Driver\Driver::_importExecutable()" refers="\DatabaseBackup\Driver\Driver::_importExecutable()" link="/classes/DatabaseBackup.Driver.Driver.html#method__importExecutable"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="41" package="Default">
        <name>__construct</name>
        <full_name>\DatabaseBackup\Driver\Driver::__construct()</full_name>
        <docblock line="41">
          <description>Construct</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\Driver\Driver::$connection"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default></default>
          <type>\Cake\Datasource\ConnectionInterface</type>
        </argument>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="58" package="Default">
        <name>implementedEvents</name>
        <full_name>\DatabaseBackup\Driver\Driver::implementedEvents()</full_name>
        <docblock line="58">
          <description>List of events this object is implementing. When the class is registered
 in an event manager, each individual method will be associated with the
 respective event</description>
          <long-description></long-description>
          <tag name="return" line="58" description="Associative array or event key names pointing to the&#10; function that should be called in the object when the respective event&#10; is fired" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="58" description="2.1.1"/>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="72" package="Default">
        <name>_exportExecutable</name>
        <full_name>\DatabaseBackup\Driver\Driver::_exportExecutable()</full_name>
        <docblock line="72">
          <description>Gets the executable command to export the database</description>
          <long-description></long-description>
          <tag name="return" line="72" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="78" package="Default">
        <name>_importExecutable</name>
        <full_name>\DatabaseBackup\Driver\Driver::_importExecutable()</full_name>
        <docblock line="78">
          <description>Gets the executable command to import the database</description>
          <long-description></long-description>
          <tag name="return" line="78" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="85" package="Default">
        <name>afterExport</name>
        <full_name>\DatabaseBackup\Driver\Driver::afterExport()</full_name>
        <docblock line="85">
          <description>Called after export</description>
          <long-description></long-description>
          <tag name="return" line="85" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="since" line="85" description="2.1.0"/>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="94" package="Default">
        <name>afterImport</name>
        <full_name>\DatabaseBackup\Driver\Driver::afterImport()</full_name>
        <docblock line="94">
          <description>Called after import</description>
          <long-description></long-description>
          <tag name="return" line="94" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="since" line="94" description="2.1.0"/>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="103" package="Default">
        <name>beforeExport</name>
        <full_name>\DatabaseBackup\Driver\Driver::beforeExport()</full_name>
        <docblock line="103">
          <description>Called before export</description>
          <long-description></long-description>
          <tag name="return" line="103" description="Returns `false` to stop the export" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="since" line="103" description="2.1.0"/>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="113" package="Default">
        <name>beforeImport</name>
        <full_name>\DatabaseBackup\Driver\Driver::beforeImport()</full_name>
        <docblock line="113">
          <description>Called before import</description>
          <long-description></long-description>
          <tag name="return" line="113" description="Returns `false` to stop the import" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="since" line="113" description="2.1.0"/>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="124" package="Default">
        <name>_exportExecutableWithCompression</name>
        <full_name>\DatabaseBackup\Driver\Driver::_exportExecutableWithCompression()</full_name>
        <docblock line="124">
          <description>Gets the executable command to export the database, with compression</description>
          <long-description></long-description>
          <tag name="param" line="124" description="&lt;p&gt;Filename where you want to export the database&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="124" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="124" description="" link="\DatabaseBackup\Driver\Driver::_exportExecutable()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="147" package="Default">
        <name>_importExecutableWithCompression</name>
        <full_name>\DatabaseBackup\Driver\Driver::_importExecutableWithCompression()</full_name>
        <docblock line="147">
          <description>Gets the executable command to import the database, with compression</description>
          <long-description></long-description>
          <tag name="param" line="147" description="&lt;p&gt;Filename from which you want to import the database&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="147" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="147" description="" link="\DatabaseBackup\Driver\Driver::_importExecutable()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="176" package="Default">
        <name>export</name>
        <full_name>\DatabaseBackup\Driver\Driver::export()</full_name>
        <docblock line="176">
          <description>Exports the database.</description>
          <long-description>When exporting, this method will trigger these events:

- Backup.beforeExport: will be triggered before export
- Backup.afterExport: will be triggered after export</long-description>
          <tag name="param" line="176" description="&lt;p&gt;Filename where you want to export the database&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="176" description="true on success" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="176" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="uses" line="176" description="" link="\DatabaseBackup\Driver\Driver::_exportExecutableWithCompression()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="200" package="Default">
        <name>getConfig</name>
        <full_name>\DatabaseBackup\Driver\Driver::getConfig()</full_name>
        <docblock line="200">
          <description>Gets a config value or the whole configuration</description>
          <long-description></long-description>
          <tag name="param" line="200" description="&lt;p&gt;Config key or &lt;code&gt;null&lt;/code&gt; to get all config values&lt;/p&gt;" type="string|null" variable="$key">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="200" description="Config value, `null` if the key doesn't exist&#10; or all config values if no key was specified" type="array|string|null">
            <type>array</type>
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="since" line="200" description="2.3.0"/>
          <tag name="uses" line="200" description="" link="\DatabaseBackup\Driver\Driver::$connection"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="219" package="Default">
        <name>import</name>
        <full_name>\DatabaseBackup\Driver\Driver::import()</full_name>
        <docblock line="219">
          <description>Imports the database.</description>
          <long-description>When importing, this method will trigger these events:

- Backup.beforeImport: will be triggered before import
- Backup.afterImport: will be triggered after import</long-description>
          <tag name="param" line="219" description="&lt;p&gt;Filename from which you want to import the database&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="219" description="true on success" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="219" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="uses" line="219" description="" link="\DatabaseBackup\Driver\Driver::_importExecutableWithCompression()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="41" package="Default">
        <name>getAbsolutePath</name>
        <full_name>\DatabaseBackup\BackupTrait::getAbsolutePath()</full_name>
        <docblock line="41">
          <description>Returns an absolute path</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;Relative or absolute path&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\BackupTrait::getTarget()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="53" package="Default">
        <name>getBinary</name>
        <full_name>\DatabaseBackup\BackupTrait::getBinary()</full_name>
        <docblock line="53">
          <description>Gets a binary path</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Binary name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="53" description="2.0.0"/>
          <tag name="throws" line="53" description="" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="68" package="Default">
        <name>getCompression</name>
        <full_name>\DatabaseBackup\BackupTrait::getCompression()</full_name>
        <docblock line="68">
          <description>Returns the compression type from a filename</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="Compression type as string or `null`" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getExtension()"/>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getValidCompressions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="82" package="Default">
        <name>getConnection</name>
        <full_name>\DatabaseBackup\BackupTrait::getConnection()</full_name>
        <docblock line="82">
          <description>Gets the connection array</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Connection name&lt;/p&gt;" type="string|null" variable="$name">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="82" description="A connection object" type="\Cake\Datasource\ConnectionInterface">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="97" package="Default">
        <name>getDriver</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriver()</full_name>
        <docblock line="97">
          <description>Gets the driver instance containing all methods to export/import database
 backups, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="97" description="The driver instance" type="object">
            <type>object</type>
          </tag>
          <tag name="since" line="97" description="2.0.0"/>
          <tag name="throws" line="97" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getDriverName()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="118" package="Default">
        <name>getDriverName</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriverName()</full_name>
        <docblock line="118">
          <description>Gets the driver name, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="118" description="The driver name" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="118" description="2.6.2"/>
          <tag name="uses" line="118" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="132" package="Default">
        <name>getExtension</name>
        <full_name>\DatabaseBackup\BackupTrait::getExtension()</full_name>
        <docblock line="132">
          <description>Returns the extension from a filename</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="132" description="Extension or `null` if the extension is not found or&#10; if is an invalid extension" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="132" description="" link="\DatabaseBackup\BackupTrait::getValidExtensions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="143" package="Default">
        <name>getTarget</name>
        <full_name>\DatabaseBackup\BackupTrait::getTarget()</full_name>
        <docblock line="143">
          <description>Returns the target path</description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="154" package="Default">
        <name>getValidCompressions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidCompressions()</full_name>
        <docblock line="154">
          <description>Returns all valid compressions</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="154" description="2.4.0"/>
          <tag name="uses" line="154" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="165" package="Default">
        <name>getValidExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidExtensions()</full_name>
        <docblock line="165">
          <description>Returns all valid extensions</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="165" description="2.4.0"/>
          <tag name="uses" line="165" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
    </class>
  </file>
  <file path="Utility/BackupImport.php" generated-path="Utility.BackupImport.html" hash="95999609dde301ebc4bcff9f9bb482e9" package="Default">
    <docblock line="0">
      <description>This file is part of cakephp-database-backup.</description>
      <long-description>Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Mirko Pagliai"/>
      <tag name="link" line="0" description="https://github.com/mirko-pagliai/cakephp-database-backup" link="https://github.com/mirko-pagliai/cakephp-database-backup"/>
      <tag name="license" line="0" description="MIT License" link="https://opensource.org/licenses/mit-license.php"/>
      <tag name="see" line="0" description="" link="https://github.com/mirko-pagliai/cakephp-database-backup/wiki/How-to-use-the-BackupImport-utility"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="BackupTrait">\DatabaseBackup\BackupTrait</namespace-alias>
    <namespace-alias name="InvalidArgumentException">\InvalidArgumentException</namespace-alias>
    <class final="false" abstract="false" namespace="DatabaseBackup\Utility" line="22" package="Default">
      <extends/>
      <name>BackupImport</name>
      <full_name>\DatabaseBackup\Utility\BackupImport</full_name>
      <docblock line="22">
        <description>Utility to import databases</description>
        <long-description></long-description>
        <tag name="package" line="22" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="DatabaseBackup\Utility" line="32" package="Default">
        <name>$driver</name>
        <full_name>\DatabaseBackup\Utility\BackupImport::$driver</full_name>
        <default></default>
        <docblock line="32">
          <description>Driver containing all methods to export/import database backups
 according to the database engine</description>
          <long-description></long-description>
          <tag name="since" line="32" description="2.0.0"/>
          <tag name="var" line="32" description="" type="object" variable="">
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="DatabaseBackup\Utility" line="38" package="Default">
        <name>$filename</name>
        <full_name>\DatabaseBackup\Utility\BackupImport::$filename</full_name>
        <default></default>
        <docblock line="38">
          <description>Filename where to import the database</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="DatabaseBackup\Utility" line="33" package="Default">
        <name>$validExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::$validExtensions</full_name>
        <default>array('sql.bz2' =&gt; 'bzip2', 'sql.gz' =&gt; 'gzip', 'sql' =&gt; false)</default>
        <docblock line="33">
          <description>Valid extensions. Names as keys and compressions as values</description>
          <long-description></long-description>
          <tag name="since" line="33" description="2.4.0"/>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="44" package="Default">
        <name>__construct</name>
        <full_name>\DatabaseBackup\Utility\BackupImport::__construct()</full_name>
        <docblock line="44">
          <description>Construct</description>
          <long-description></long-description>
          <tag name="uses" line="44" description="" link="\DatabaseBackup\Utility\BackupImport::$driver"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="58" package="Default">
        <name>filename</name>
        <full_name>\DatabaseBackup\Utility\BackupImport::filename()</full_name>
        <docblock line="58">
          <description>Sets the filename</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;Filename. It can be an absolute path&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="58" description="" type="\DatabaseBackup\Utility\BackupImport">
            <type>\DatabaseBackup\Utility\BackupImport</type>
          </tag>
          <tag name="see" line="58" description="" link="https://github.com/mirko-pagliai/cakephp-database-backup/wiki/How-to-use-the-BackupImport-utility#filename"/>
          <tag name="throws" line="58" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="throws" line="58" description="" type="\Tools\Exception\NotReadableException">
            <type>\Tools\Exception\NotReadableException</type>
          </tag>
          <tag name="uses" line="58" description="" link="\DatabaseBackup\Utility\BackupImport::$filename"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="83" package="Default">
        <name>import</name>
        <full_name>\DatabaseBackup\Utility\BackupImport::import()</full_name>
        <docblock line="83">
          <description>Imports the database</description>
          <long-description></long-description>
          <tag name="return" line="83" description="Filename path" type="string">
            <type>string</type>
          </tag>
          <tag name="see" line="83" description="" link="https://github.com/mirko-pagliai/cakephp-database-backup/wiki/How-to-use-the-BackupImport-utility#import"/>
          <tag name="throws" line="83" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="83" description="" link="\DatabaseBackup\Utility\BackupImport::$driver"/>
          <tag name="uses" line="83" description="" link="\DatabaseBackup\Utility\BackupImport::$filename"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="41" package="Default">
        <name>getAbsolutePath</name>
        <full_name>\DatabaseBackup\BackupTrait::getAbsolutePath()</full_name>
        <docblock line="41">
          <description>Returns an absolute path</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;Relative or absolute path&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\BackupTrait::getTarget()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="53" package="Default">
        <name>getBinary</name>
        <full_name>\DatabaseBackup\BackupTrait::getBinary()</full_name>
        <docblock line="53">
          <description>Gets a binary path</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Binary name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="53" description="2.0.0"/>
          <tag name="throws" line="53" description="" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="68" package="Default">
        <name>getCompression</name>
        <full_name>\DatabaseBackup\BackupTrait::getCompression()</full_name>
        <docblock line="68">
          <description>Returns the compression type from a filename</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="Compression type as string or `null`" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getExtension()"/>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getValidCompressions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="82" package="Default">
        <name>getConnection</name>
        <full_name>\DatabaseBackup\BackupTrait::getConnection()</full_name>
        <docblock line="82">
          <description>Gets the connection array</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Connection name&lt;/p&gt;" type="string|null" variable="$name">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="82" description="A connection object" type="\Cake\Datasource\ConnectionInterface">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="97" package="Default">
        <name>getDriver</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriver()</full_name>
        <docblock line="97">
          <description>Gets the driver instance containing all methods to export/import database
 backups, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="97" description="The driver instance" type="object">
            <type>object</type>
          </tag>
          <tag name="since" line="97" description="2.0.0"/>
          <tag name="throws" line="97" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getDriverName()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="118" package="Default">
        <name>getDriverName</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriverName()</full_name>
        <docblock line="118">
          <description>Gets the driver name, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="118" description="The driver name" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="118" description="2.6.2"/>
          <tag name="uses" line="118" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="132" package="Default">
        <name>getExtension</name>
        <full_name>\DatabaseBackup\BackupTrait::getExtension()</full_name>
        <docblock line="132">
          <description>Returns the extension from a filename</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="132" description="Extension or `null` if the extension is not found or&#10; if is an invalid extension" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="132" description="" link="\DatabaseBackup\BackupTrait::getValidExtensions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="143" package="Default">
        <name>getTarget</name>
        <full_name>\DatabaseBackup\BackupTrait::getTarget()</full_name>
        <docblock line="143">
          <description>Returns the target path</description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="154" package="Default">
        <name>getValidCompressions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidCompressions()</full_name>
        <docblock line="154">
          <description>Returns all valid compressions</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="154" description="2.4.0"/>
          <tag name="uses" line="154" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="165" package="Default">
        <name>getValidExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidExtensions()</full_name>
        <docblock line="165">
          <description>Returns all valid extensions</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="165" description="2.4.0"/>
          <tag name="uses" line="165" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
    </class>
  </file>
  <file path="Driver/Sqlite.php" generated-path="Driver.Sqlite.html" hash="d12786b5f5e48e54d8567ef1897b0f30" package="Default">
    <docblock line="0">
      <description>This file is part of cakephp-database-backup.</description>
      <long-description>Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Mirko Pagliai"/>
      <tag name="link" line="0" description="https://github.com/mirko-pagliai/cakephp-database-backup" link="https://github.com/mirko-pagliai/cakephp-database-backup"/>
      <tag name="license" line="0" description="MIT License" link="https://opensource.org/licenses/mit-license.php"/>
      <tag name="since" line="0" description="2.0.0"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Driver">\DatabaseBackup\Driver\Driver</namespace-alias>
    <class final="false" abstract="false" namespace="DatabaseBackup\Driver" line="21" package="Default">
      <extends>\DatabaseBackup\Driver\Driver</extends>
      <name>Sqlite</name>
      <full_name>\DatabaseBackup\Driver\Sqlite</full_name>
      <docblock line="21">
        <description>Sqlite driver to export/import database backups</description>
        <long-description></long-description>
        <tag name="package" line="21" description="Default"/>
        <tag name="inherited_from" description="\DatabaseBackup\Driver\Driver" refers="\DatabaseBackup\Driver\Driver" link="/classes/DatabaseBackup.Driver.Driver.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="34" package="Default">
        <name>$connection</name>
        <full_name>\DatabaseBackup\Driver\Driver::$connection</full_name>
        <default></default>
        <docblock line="34">
          <description>A connection object</description>
          <long-description></long-description>
          <tag name="var" line="34" description="" type="\Cake\Datasource\ConnectionInterface" variable="">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="DatabaseBackup\Driver" line="33" package="Default">
        <name>$validExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::$validExtensions</full_name>
        <default>array('sql.bz2' =&gt; 'bzip2', 'sql.gz' =&gt; 'gzip', 'sql' =&gt; false)</default>
        <docblock line="33">
          <description>Valid extensions. Names as keys and compressions as values</description>
          <long-description></long-description>
          <tag name="since" line="33" description="2.4.0"/>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="28" package="Default">
        <name>_exportExecutable</name>
        <full_name>\DatabaseBackup\Driver\Sqlite::_exportExecutable()</full_name>
        <docblock line="28">
          <description>Gets the executable command to export the database</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="28" description="" link="\DatabaseBackup\Driver\getConfig()"/>
          <tag name="inherited_from" description="\DatabaseBackup\Driver\Driver::_exportExecutable()" refers="\DatabaseBackup\Driver\Driver::_exportExecutable()" link="/classes/DatabaseBackup.Driver.Driver.html#method__exportExecutable"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="38" package="Default">
        <name>_importExecutable</name>
        <full_name>\DatabaseBackup\Driver\Sqlite::_importExecutable()</full_name>
        <docblock line="38">
          <description>Gets the executable command to import the database</description>
          <long-description></long-description>
          <tag name="return" line="38" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="38" description="" link="\DatabaseBackup\Driver\getConfig()"/>
          <tag name="inherited_from" description="\DatabaseBackup\Driver\Driver::_importExecutable()" refers="\DatabaseBackup\Driver\Driver::_importExecutable()" link="/classes/DatabaseBackup.Driver.Driver.html#method__importExecutable"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="49" package="Default">
        <name>beforeImport</name>
        <full_name>\DatabaseBackup\Driver\Sqlite::beforeImport()</full_name>
        <docblock line="49">
          <description>Called before import</description>
          <long-description></long-description>
          <tag name="return" line="49" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="since" line="49" description="2.1.0"/>
          <tag name="uses" line="49" description="" link="\DatabaseBackup\Driver\$connection"/>
          <tag name="inherited_from" description="\DatabaseBackup\Driver\Driver::beforeImport()" refers="\DatabaseBackup\Driver\Driver::beforeImport()" link="/classes/DatabaseBackup.Driver.Driver.html#method_beforeImport"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="41" package="Default">
        <name>__construct</name>
        <full_name>\DatabaseBackup\Driver\Driver::__construct()</full_name>
        <docblock line="41">
          <description>Construct</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\Driver\Driver::$connection"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default></default>
          <type>\Cake\Datasource\ConnectionInterface</type>
        </argument>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="58" package="Default">
        <name>implementedEvents</name>
        <full_name>\DatabaseBackup\Driver\Driver::implementedEvents()</full_name>
        <docblock line="58">
          <description>List of events this object is implementing. When the class is registered
 in an event manager, each individual method will be associated with the
 respective event</description>
          <long-description></long-description>
          <tag name="return" line="58" description="Associative array or event key names pointing to the&#10; function that should be called in the object when the respective event&#10; is fired" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="58" description="2.1.1"/>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="72" package="Default">
        <name>_exportExecutable</name>
        <full_name>\DatabaseBackup\Driver\Driver::_exportExecutable()</full_name>
        <docblock line="72">
          <description>Gets the executable command to export the database</description>
          <long-description></long-description>
          <tag name="return" line="72" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="78" package="Default">
        <name>_importExecutable</name>
        <full_name>\DatabaseBackup\Driver\Driver::_importExecutable()</full_name>
        <docblock line="78">
          <description>Gets the executable command to import the database</description>
          <long-description></long-description>
          <tag name="return" line="78" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="85" package="Default">
        <name>afterExport</name>
        <full_name>\DatabaseBackup\Driver\Driver::afterExport()</full_name>
        <docblock line="85">
          <description>Called after export</description>
          <long-description></long-description>
          <tag name="return" line="85" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="since" line="85" description="2.1.0"/>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="94" package="Default">
        <name>afterImport</name>
        <full_name>\DatabaseBackup\Driver\Driver::afterImport()</full_name>
        <docblock line="94">
          <description>Called after import</description>
          <long-description></long-description>
          <tag name="return" line="94" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="since" line="94" description="2.1.0"/>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="103" package="Default">
        <name>beforeExport</name>
        <full_name>\DatabaseBackup\Driver\Driver::beforeExport()</full_name>
        <docblock line="103">
          <description>Called before export</description>
          <long-description></long-description>
          <tag name="return" line="103" description="Returns `false` to stop the export" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="since" line="103" description="2.1.0"/>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="113" package="Default">
        <name>beforeImport</name>
        <full_name>\DatabaseBackup\Driver\Driver::beforeImport()</full_name>
        <docblock line="113">
          <description>Called before import</description>
          <long-description></long-description>
          <tag name="return" line="113" description="Returns `false` to stop the import" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="since" line="113" description="2.1.0"/>
        </docblock>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="124" package="Default">
        <name>_exportExecutableWithCompression</name>
        <full_name>\DatabaseBackup\Driver\Driver::_exportExecutableWithCompression()</full_name>
        <docblock line="124">
          <description>Gets the executable command to export the database, with compression</description>
          <long-description></long-description>
          <tag name="param" line="124" description="&lt;p&gt;Filename where you want to export the database&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="124" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="124" description="" link="\DatabaseBackup\Driver\Driver::_exportExecutable()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="147" package="Default">
        <name>_importExecutableWithCompression</name>
        <full_name>\DatabaseBackup\Driver\Driver::_importExecutableWithCompression()</full_name>
        <docblock line="147">
          <description>Gets the executable command to import the database, with compression</description>
          <long-description></long-description>
          <tag name="param" line="147" description="&lt;p&gt;Filename from which you want to import the database&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="147" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="147" description="" link="\DatabaseBackup\Driver\Driver::_importExecutable()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="176" package="Default">
        <name>export</name>
        <full_name>\DatabaseBackup\Driver\Driver::export()</full_name>
        <docblock line="176">
          <description>Exports the database.</description>
          <long-description>When exporting, this method will trigger these events:

- Backup.beforeExport: will be triggered before export
- Backup.afterExport: will be triggered after export</long-description>
          <tag name="param" line="176" description="&lt;p&gt;Filename where you want to export the database&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="176" description="true on success" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="176" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="uses" line="176" description="" link="\DatabaseBackup\Driver\Driver::_exportExecutableWithCompression()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="200" package="Default">
        <name>getConfig</name>
        <full_name>\DatabaseBackup\Driver\Driver::getConfig()</full_name>
        <docblock line="200">
          <description>Gets a config value or the whole configuration</description>
          <long-description></long-description>
          <tag name="param" line="200" description="&lt;p&gt;Config key or &lt;code&gt;null&lt;/code&gt; to get all config values&lt;/p&gt;" type="string|null" variable="$key">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="200" description="Config value, `null` if the key doesn't exist&#10; or all config values if no key was specified" type="array|string|null">
            <type>array</type>
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="since" line="200" description="2.3.0"/>
          <tag name="uses" line="200" description="" link="\DatabaseBackup\Driver\Driver::$connection"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="219" package="Default">
        <name>import</name>
        <full_name>\DatabaseBackup\Driver\Driver::import()</full_name>
        <docblock line="219">
          <description>Imports the database.</description>
          <long-description>When importing, this method will trigger these events:

- Backup.beforeImport: will be triggered before import
- Backup.afterImport: will be triggered after import</long-description>
          <tag name="param" line="219" description="&lt;p&gt;Filename from which you want to import the database&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="219" description="true on success" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="219" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="uses" line="219" description="" link="\DatabaseBackup\Driver\Driver::_importExecutableWithCompression()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\Driver\Driver</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="41" package="Default">
        <name>getAbsolutePath</name>
        <full_name>\DatabaseBackup\BackupTrait::getAbsolutePath()</full_name>
        <docblock line="41">
          <description>Returns an absolute path</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;Relative or absolute path&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\BackupTrait::getTarget()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="53" package="Default">
        <name>getBinary</name>
        <full_name>\DatabaseBackup\BackupTrait::getBinary()</full_name>
        <docblock line="53">
          <description>Gets a binary path</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Binary name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="53" description="2.0.0"/>
          <tag name="throws" line="53" description="" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="68" package="Default">
        <name>getCompression</name>
        <full_name>\DatabaseBackup\BackupTrait::getCompression()</full_name>
        <docblock line="68">
          <description>Returns the compression type from a filename</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="Compression type as string or `null`" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getExtension()"/>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getValidCompressions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="82" package="Default">
        <name>getConnection</name>
        <full_name>\DatabaseBackup\BackupTrait::getConnection()</full_name>
        <docblock line="82">
          <description>Gets the connection array</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Connection name&lt;/p&gt;" type="string|null" variable="$name">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="82" description="A connection object" type="\Cake\Datasource\ConnectionInterface">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="97" package="Default">
        <name>getDriver</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriver()</full_name>
        <docblock line="97">
          <description>Gets the driver instance containing all methods to export/import database
 backups, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="97" description="The driver instance" type="object">
            <type>object</type>
          </tag>
          <tag name="since" line="97" description="2.0.0"/>
          <tag name="throws" line="97" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getDriverName()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="118" package="Default">
        <name>getDriverName</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriverName()</full_name>
        <docblock line="118">
          <description>Gets the driver name, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="118" description="The driver name" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="118" description="2.6.2"/>
          <tag name="uses" line="118" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="132" package="Default">
        <name>getExtension</name>
        <full_name>\DatabaseBackup\BackupTrait::getExtension()</full_name>
        <docblock line="132">
          <description>Returns the extension from a filename</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="132" description="Extension or `null` if the extension is not found or&#10; if is an invalid extension" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="132" description="" link="\DatabaseBackup\BackupTrait::getValidExtensions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="143" package="Default">
        <name>getTarget</name>
        <full_name>\DatabaseBackup\BackupTrait::getTarget()</full_name>
        <docblock line="143">
          <description>Returns the target path</description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="154" package="Default">
        <name>getValidCompressions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidCompressions()</full_name>
        <docblock line="154">
          <description>Returns all valid compressions</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="154" description="2.4.0"/>
          <tag name="uses" line="154" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="165" package="Default">
        <name>getValidExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidExtensions()</full_name>
        <docblock line="165">
          <description>Returns all valid extensions</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="165" description="2.4.0"/>
          <tag name="uses" line="165" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
    </class>
  </file>
  <file path="TestSuite/TestCase.php" generated-path="TestSuite.TestCase.html" hash="6ae996147b449664582864a69f1ee4d7" package="Default">
    <docblock line="0">
      <description>This file is part of cakephp-database-backup.</description>
      <long-description>Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Mirko Pagliai"/>
      <tag name="link" line="0" description="https://github.com/mirko-pagliai/cakephp-database-backup" link="https://github.com/mirko-pagliai/cakephp-database-backup"/>
      <tag name="license" line="0" description="MIT License" link="https://opensource.org/licenses/mit-license.php"/>
      <tag name="since" line="0" description="2.0.0"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Configure">\Cake\Core\Configure</namespace-alias>
    <namespace-alias name="BackupTrait">\DatabaseBackup\BackupTrait</namespace-alias>
    <namespace-alias name="BackupExport">\DatabaseBackup\Utility\BackupExport</namespace-alias>
    <namespace-alias name="BaseTestCase">\MeTools\TestSuite\TestCase</namespace-alias>
    <class final="false" abstract="true" namespace="DatabaseBackup\TestSuite" line="24" package="Default">
      <extends>\MeTools\TestSuite\TestCase</extends>
      <name>TestCase</name>
      <full_name>\DatabaseBackup\TestSuite\TestCase</full_name>
      <docblock line="24">
        <description>TestCase class</description>
        <long-description></long-description>
        <tag name="package" line="24" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="DatabaseBackup\TestSuite" line="32" package="Default">
        <name>$BackupExport</name>
        <full_name>\DatabaseBackup\TestSuite\TestCase::$BackupExport</full_name>
        <default></default>
        <docblock line="32">
          <description>`BackupManager` instance</description>
          <long-description></long-description>
          <tag name="var" line="32" description="" type="\DatabaseBackup\Utility\BackupExport" variable="">
            <type>\DatabaseBackup\Utility\BackupExport</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="DatabaseBackup\TestSuite" line="33" package="Default">
        <name>$validExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::$validExtensions</full_name>
        <default>array('sql.bz2' =&gt; 'bzip2', 'sql.gz' =&gt; 'gzip', 'sql' =&gt; false)</default>
        <docblock line="33">
          <description>Valid extensions. Names as keys and compressions as values</description>
          <long-description></long-description>
          <tag name="since" line="33" description="2.4.0"/>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="38" package="Default">
        <name>setUp</name>
        <full_name>\DatabaseBackup\TestSuite\TestCase::setUp()</full_name>
        <docblock line="38">
          <description>Called before every test method</description>
          <long-description></long-description>
          <tag name="return" line="38" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="49" package="Default">
        <name>tearDown</name>
        <full_name>\DatabaseBackup\TestSuite\TestCase::tearDown()</full_name>
        <docblock line="49">
          <description>Called after every test method</description>
          <long-description></long-description>
          <tag name="return" line="49" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\TestSuite" line="62" package="Default">
        <name>createBackup</name>
        <full_name>\DatabaseBackup\TestSuite\TestCase::createBackup()</full_name>
        <docblock line="62">
          <description>Internal method to create a backup file</description>
          <long-description></long-description>
          <tag name="param" line="62" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="62" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default>'backup.sql'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\TestSuite" line="73" package="Default">
        <name>createSomeBackups</name>
        <full_name>\DatabaseBackup\TestSuite\TestCase::createSomeBackups()</full_name>
        <docblock line="73">
          <description>Internal method to creates some backup files</description>
          <long-description></long-description>
          <tag name="param" line="73" description="&lt;p&gt;If &lt;code&gt;true&lt;/code&gt;, waits a second for each backup&lt;/p&gt;" type="boolean" variable="$sleep">
            <type>boolean</type>
          </tag>
          <tag name="return" line="73" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="uses" line="73" description="" link="\DatabaseBackup\TestSuite\TestCase::createBackup()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sleep</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\TestSuite" line="92" package="Default">
        <name>getMockForDriver</name>
        <full_name>\DatabaseBackup\TestSuite\TestCase::getMockForDriver()</full_name>
        <docblock line="92">
          <description>Internal method to mock a driver</description>
          <long-description></long-description>
          <tag name="param" line="92" description="&lt;p&gt;Driver class name&lt;/p&gt;" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="param" line="92" description="&lt;p&gt;The list of methods to mock&lt;/p&gt;" type="array" variable="$methods">
            <type>array</type>
          </tag>
          <tag name="return" line="92" description="" type="\DatabaseBackup\Driver\Driver|\PHPUnit_Framework_MockObject_MockObject">
            <type>\DatabaseBackup\Driver\Driver</type>
            <type>\PHPUnit_Framework_MockObject_MockObject</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$methods</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="41" package="Default">
        <name>getAbsolutePath</name>
        <full_name>\DatabaseBackup\BackupTrait::getAbsolutePath()</full_name>
        <docblock line="41">
          <description>Returns an absolute path</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;Relative or absolute path&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\BackupTrait::getTarget()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="53" package="Default">
        <name>getBinary</name>
        <full_name>\DatabaseBackup\BackupTrait::getBinary()</full_name>
        <docblock line="53">
          <description>Gets a binary path</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Binary name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="53" description="2.0.0"/>
          <tag name="throws" line="53" description="" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="68" package="Default">
        <name>getCompression</name>
        <full_name>\DatabaseBackup\BackupTrait::getCompression()</full_name>
        <docblock line="68">
          <description>Returns the compression type from a filename</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="Compression type as string or `null`" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getExtension()"/>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getValidCompressions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="82" package="Default">
        <name>getConnection</name>
        <full_name>\DatabaseBackup\BackupTrait::getConnection()</full_name>
        <docblock line="82">
          <description>Gets the connection array</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Connection name&lt;/p&gt;" type="string|null" variable="$name">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="82" description="A connection object" type="\Cake\Datasource\ConnectionInterface">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="97" package="Default">
        <name>getDriver</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriver()</full_name>
        <docblock line="97">
          <description>Gets the driver instance containing all methods to export/import database
 backups, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="97" description="The driver instance" type="object">
            <type>object</type>
          </tag>
          <tag name="since" line="97" description="2.0.0"/>
          <tag name="throws" line="97" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getDriverName()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="118" package="Default">
        <name>getDriverName</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriverName()</full_name>
        <docblock line="118">
          <description>Gets the driver name, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="118" description="The driver name" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="118" description="2.6.2"/>
          <tag name="uses" line="118" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="132" package="Default">
        <name>getExtension</name>
        <full_name>\DatabaseBackup\BackupTrait::getExtension()</full_name>
        <docblock line="132">
          <description>Returns the extension from a filename</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="132" description="Extension or `null` if the extension is not found or&#10; if is an invalid extension" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="132" description="" link="\DatabaseBackup\BackupTrait::getValidExtensions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="143" package="Default">
        <name>getTarget</name>
        <full_name>\DatabaseBackup\BackupTrait::getTarget()</full_name>
        <docblock line="143">
          <description>Returns the target path</description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="154" package="Default">
        <name>getValidCompressions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidCompressions()</full_name>
        <docblock line="154">
          <description>Returns all valid compressions</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="154" description="2.4.0"/>
          <tag name="uses" line="154" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="165" package="Default">
        <name>getValidExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidExtensions()</full_name>
        <docblock line="165">
          <description>Returns all valid extensions</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="165" description="2.4.0"/>
          <tag name="uses" line="165" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
    </class>
  </file>
  <file path="BackupTrait.php" generated-path="BackupTrait.html" hash="d01c28f2fb4fcfbade54a62aa9aed45c" package="Default">
    <docblock line="0">
      <description>This file is part of cakephp-database-backup.</description>
      <long-description>Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Mirko Pagliai"/>
      <tag name="link" line="0" description="https://github.com/mirko-pagliai/cakephp-database-backup" link="https://github.com/mirko-pagliai/cakephp-database-backup"/>
      <tag name="license" line="0" description="MIT License" link="https://opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="App">\Cake\Core\App</namespace-alias>
    <namespace-alias name="Configure">\Cake\Core\Configure</namespace-alias>
    <namespace-alias name="ConnectionInterface">\Cake\Datasource\ConnectionInterface</namespace-alias>
    <namespace-alias name="ConnectionManager">\Cake\Datasource\ConnectionManager</namespace-alias>
    <namespace-alias name="InvalidArgumentException">\InvalidArgumentException</namespace-alias>
    <namespace-alias name="RuntimeException">\RuntimeException</namespace-alias>
    <namespace-alias name="Filesystem">\Symfony\Component\Filesystem\Filesystem</namespace-alias>
    <trait namespace="DatabaseBackup" line="26" package="Default">
      <name>BackupTrait</name>
      <full_name>\DatabaseBackup\BackupTrait</full_name>
      <docblock line="26">
        <description>A trait that provides some methods used by all other classes</description>
        <long-description></long-description>
        <tag name="package" line="26" description="Default"/>
      </docblock>
      <property static="true" visibility="private" namespace="DatabaseBackup" line="33" package="Default">
        <name>$validExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::$validExtensions</full_name>
        <default>array('sql.bz2' =&gt; 'bzip2', 'sql.gz' =&gt; 'gzip', 'sql' =&gt; false)</default>
        <docblock line="33">
          <description>Valid extensions. Names as keys and compressions as values</description>
          <long-description></long-description>
          <tag name="since" line="33" description="2.4.0"/>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup" line="41" package="Default">
        <name>getAbsolutePath</name>
        <full_name>\DatabaseBackup\BackupTrait::getAbsolutePath()</full_name>
        <docblock line="41">
          <description>Returns an absolute path</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;Relative or absolute path&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\BackupTrait::getTarget()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup" line="53" package="Default">
        <name>getBinary</name>
        <full_name>\DatabaseBackup\BackupTrait::getBinary()</full_name>
        <docblock line="53">
          <description>Gets a binary path</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Binary name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="53" description="2.0.0"/>
          <tag name="throws" line="53" description="" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup" line="68" package="Default">
        <name>getCompression</name>
        <full_name>\DatabaseBackup\BackupTrait::getCompression()</full_name>
        <docblock line="68">
          <description>Returns the compression type from a filename</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="Compression type as string or `null`" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getExtension()"/>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getValidCompressions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup" line="82" package="Default">
        <name>getConnection</name>
        <full_name>\DatabaseBackup\BackupTrait::getConnection()</full_name>
        <docblock line="82">
          <description>Gets the connection array</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Connection name&lt;/p&gt;" type="string|null" variable="$name">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="82" description="A connection object" type="\Cake\Datasource\ConnectionInterface">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup" line="97" package="Default">
        <name>getDriver</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriver()</full_name>
        <docblock line="97">
          <description>Gets the driver instance containing all methods to export/import database
 backups, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="97" description="The driver instance" type="object">
            <type>object</type>
          </tag>
          <tag name="since" line="97" description="2.0.0"/>
          <tag name="throws" line="97" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getDriverName()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup" line="118" package="Default">
        <name>getDriverName</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriverName()</full_name>
        <docblock line="118">
          <description>Gets the driver name, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="118" description="The driver name" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="118" description="2.6.2"/>
          <tag name="uses" line="118" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup" line="132" package="Default">
        <name>getExtension</name>
        <full_name>\DatabaseBackup\BackupTrait::getExtension()</full_name>
        <docblock line="132">
          <description>Returns the extension from a filename</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="132" description="Extension or `null` if the extension is not found or&#10; if is an invalid extension" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="132" description="" link="\DatabaseBackup\BackupTrait::getValidExtensions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup" line="143" package="Default">
        <name>getTarget</name>
        <full_name>\DatabaseBackup\BackupTrait::getTarget()</full_name>
        <docblock line="143">
          <description>Returns the target path</description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup" line="154" package="Default">
        <name>getValidCompressions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidCompressions()</full_name>
        <docblock line="154">
          <description>Returns all valid compressions</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="154" description="2.4.0"/>
          <tag name="uses" line="154" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup" line="165" package="Default">
        <name>getValidExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidExtensions()</full_name>
        <docblock line="165">
          <description>Returns all valid extensions</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="165" description="2.4.0"/>
          <tag name="uses" line="165" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
      </method>
    </trait>
  </file>
  <file path="Command/SendCommand.php" generated-path="Command.SendCommand.html" hash="02befb0c84ccc62925d0a629b4dbba37" package="Default">
    <docblock line="0">
      <description>This file is part of cakephp-database-backup.</description>
      <long-description>Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Mirko Pagliai"/>
      <tag name="link" line="0" description="https://github.com/mirko-pagliai/cakephp-database-backup" link="https://github.com/mirko-pagliai/cakephp-database-backup"/>
      <tag name="license" line="0" description="MIT License" link="https://opensource.org/licenses/mit-license.php"/>
      <tag name="since" line="0" description="2.6.0"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Arguments">\Cake\Console\Arguments</namespace-alias>
    <namespace-alias name="ConsoleIo">\Cake\Console\ConsoleIo</namespace-alias>
    <namespace-alias name="ConsoleOptionParser">\Cake\Console\ConsoleOptionParser</namespace-alias>
    <namespace-alias name="Command">\DatabaseBackup\Console\Command</namespace-alias>
    <namespace-alias name="BackupManager">\DatabaseBackup\Utility\BackupManager</namespace-alias>
    <namespace-alias name="Exception">\Exception</namespace-alias>
    <class final="false" abstract="false" namespace="DatabaseBackup\Command" line="26" package="Default">
      <extends>\DatabaseBackup\Console\Command</extends>
      <name>SendCommand</name>
      <full_name>\DatabaseBackup\Command\SendCommand</full_name>
      <docblock line="26">
        <description>Sends a backup file via email</description>
        <long-description></long-description>
        <tag name="package" line="26" description="Default"/>
        <tag name="inherited_from" description="\DatabaseBackup\Console\Command" refers="\DatabaseBackup\Console\Command" link="/classes/DatabaseBackup.Console.Command.html"/>
      </docblock>
      <property static="true" visibility="private" namespace="DatabaseBackup\Command" line="33" package="Default">
        <name>$validExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::$validExtensions</full_name>
        <default>array('sql.bz2' =&gt; 'bzip2', 'sql.gz' =&gt; 'gzip', 'sql' =&gt; false)</default>
        <docblock line="33">
          <description>Valid extensions. Names as keys and compressions as values</description>
          <long-description></long-description>
          <tag name="since" line="33" description="2.4.0"/>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Command" line="33" package="Default">
        <name>buildOptionParser</name>
        <full_name>\DatabaseBackup\Command\SendCommand::buildOptionParser()</full_name>
        <docblock line="33">
          <description>Hook method for defining this command's option parser</description>
          <long-description></long-description>
          <tag name="param" line="33" description="&lt;p&gt;The parser to be defined&lt;/p&gt;" type="\Cake\Console\ConsoleOptionParser" variable="$parser">
            <type>\Cake\Console\ConsoleOptionParser</type>
          </tag>
          <tag name="return" line="33" description="" type="\Cake\Console\ConsoleOptionParser">
            <type>\Cake\Console\ConsoleOptionParser</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\Cake\Console\ConsoleOptionParser</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="56" package="Default">
        <name>execute</name>
        <full_name>\DatabaseBackup\Command\SendCommand::execute()</full_name>
        <docblock line="56">
          <description>Sends a backup file via email</description>
          <long-description></long-description>
          <tag name="param" line="56" description="&lt;p&gt;The command arguments&lt;/p&gt;" type="\Cake\Console\Arguments" variable="$args">
            <type>\Cake\Console\Arguments</type>
          </tag>
          <tag name="param" line="56" description="&lt;p&gt;The console io&lt;/p&gt;" type="\Cake\Console\ConsoleIo" variable="$io">
            <type>\Cake\Console\ConsoleIo</type>
          </tag>
          <tag name="return" line="56" description="The exit code or null for success" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
          <tag name="see" line="56" description="" link="https://github.com/mirko-pagliai/cakephp-database-backup/wiki/How-to-use-the-BackupShell#send"/>
          <tag name="uses" line="56" description="" link="\DatabaseBackup\Utility\BackupManager::send()"/>
          <tag name="inherited_from" description="\DatabaseBackup\Console\Command::execute()" refers="\DatabaseBackup\Console\Command::execute()" link="/classes/DatabaseBackup.Console.Command.html#method_execute"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>\Cake\Console\Arguments</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$io</name>
          <default></default>
          <type>\Cake\Console\ConsoleIo</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="34" package="Default">
        <name>execute</name>
        <full_name>\DatabaseBackup\Console\Command::execute()</full_name>
        <docblock line="34">
          <description>Implement this method with your command's logic</description>
          <long-description></long-description>
          <tag name="param" line="34" description="&lt;p&gt;The command arguments&lt;/p&gt;" type="\Cake\Console\Arguments" variable="$args">
            <type>\Cake\Console\Arguments</type>
          </tag>
          <tag name="param" line="34" description="&lt;p&gt;The console io&lt;/p&gt;" type="\Cake\Console\ConsoleIo" variable="$io">
            <type>\Cake\Console\ConsoleIo</type>
          </tag>
          <tag name="return" line="34" description="The exit code or null for success" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>\Cake\Console\Arguments</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$io</name>
          <default></default>
          <type>\Cake\Console\ConsoleIo</type>
        </argument>
        <inherited_from>\DatabaseBackup\Console\Command</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="41" package="Default">
        <name>getAbsolutePath</name>
        <full_name>\DatabaseBackup\BackupTrait::getAbsolutePath()</full_name>
        <docblock line="41">
          <description>Returns an absolute path</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;Relative or absolute path&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\BackupTrait::getTarget()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="53" package="Default">
        <name>getBinary</name>
        <full_name>\DatabaseBackup\BackupTrait::getBinary()</full_name>
        <docblock line="53">
          <description>Gets a binary path</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Binary name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="53" description="2.0.0"/>
          <tag name="throws" line="53" description="" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="68" package="Default">
        <name>getCompression</name>
        <full_name>\DatabaseBackup\BackupTrait::getCompression()</full_name>
        <docblock line="68">
          <description>Returns the compression type from a filename</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="Compression type as string or `null`" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getExtension()"/>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getValidCompressions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="82" package="Default">
        <name>getConnection</name>
        <full_name>\DatabaseBackup\BackupTrait::getConnection()</full_name>
        <docblock line="82">
          <description>Gets the connection array</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Connection name&lt;/p&gt;" type="string|null" variable="$name">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="82" description="A connection object" type="\Cake\Datasource\ConnectionInterface">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="97" package="Default">
        <name>getDriver</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriver()</full_name>
        <docblock line="97">
          <description>Gets the driver instance containing all methods to export/import database
 backups, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="97" description="The driver instance" type="object">
            <type>object</type>
          </tag>
          <tag name="since" line="97" description="2.0.0"/>
          <tag name="throws" line="97" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getDriverName()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="118" package="Default">
        <name>getDriverName</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriverName()</full_name>
        <docblock line="118">
          <description>Gets the driver name, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="118" description="The driver name" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="118" description="2.6.2"/>
          <tag name="uses" line="118" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="132" package="Default">
        <name>getExtension</name>
        <full_name>\DatabaseBackup\BackupTrait::getExtension()</full_name>
        <docblock line="132">
          <description>Returns the extension from a filename</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="132" description="Extension or `null` if the extension is not found or&#10; if is an invalid extension" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="132" description="" link="\DatabaseBackup\BackupTrait::getValidExtensions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="143" package="Default">
        <name>getTarget</name>
        <full_name>\DatabaseBackup\BackupTrait::getTarget()</full_name>
        <docblock line="143">
          <description>Returns the target path</description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="154" package="Default">
        <name>getValidCompressions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidCompressions()</full_name>
        <docblock line="154">
          <description>Returns all valid compressions</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="154" description="2.4.0"/>
          <tag name="uses" line="154" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="165" package="Default">
        <name>getValidExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidExtensions()</full_name>
        <docblock line="165">
          <description>Returns all valid extensions</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="165" description="2.4.0"/>
          <tag name="uses" line="165" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
    </class>
  </file>
  <file path="Utility/BackupManager.php" generated-path="Utility.BackupManager.html" hash="4afba8f1448919d2877dbc6f39526e2d" package="Default">
    <docblock line="0">
      <description>This file is part of cakephp-database-backup.</description>
      <long-description>Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Mirko Pagliai"/>
      <tag name="link" line="0" description="https://github.com/mirko-pagliai/cakephp-database-backup" link="https://github.com/mirko-pagliai/cakephp-database-backup"/>
      <tag name="license" line="0" description="MIT License" link="https://opensource.org/licenses/mit-license.php"/>
      <tag name="see" line="0" description="" link="https://github.com/mirko-pagliai/cakephp-database-backup/wiki/How-to-use-the-BackupManager-utility"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Configure">\Cake\Core\Configure</namespace-alias>
    <namespace-alias name="FrozenTime">\Cake\I18n\FrozenTime</namespace-alias>
    <namespace-alias name="Email">\Cake\Mailer\Email</namespace-alias>
    <namespace-alias name="Entity">\Cake\ORM\Entity</namespace-alias>
    <namespace-alias name="BackupTrait">\DatabaseBackup\BackupTrait</namespace-alias>
    <namespace-alias name="InvalidArgumentException">\InvalidArgumentException</namespace-alias>
    <namespace-alias name="Finder">\Symfony\Component\Finder\Finder</namespace-alias>
    <namespace-alias name="SplFileInfo">\Symfony\Component\Finder\SplFileInfo</namespace-alias>
    <class final="false" abstract="false" namespace="DatabaseBackup\Utility" line="28" package="Default">
      <extends/>
      <name>BackupManager</name>
      <full_name>\DatabaseBackup\Utility\BackupManager</full_name>
      <docblock line="28">
        <description>Utility to manage database backups</description>
        <long-description></long-description>
        <tag name="package" line="28" description="Default"/>
      </docblock>
      <property static="true" visibility="private" namespace="DatabaseBackup\Utility" line="33" package="Default">
        <name>$validExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::$validExtensions</full_name>
        <default>array('sql.bz2' =&gt; 'bzip2', 'sql.gz' =&gt; 'gzip', 'sql' =&gt; false)</default>
        <docblock line="33">
          <description>Valid extensions. Names as keys and compressions as values</description>
          <long-description></long-description>
          <tag name="since" line="33" description="2.4.0"/>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="40" package="Default">
        <name>delete</name>
        <full_name>\DatabaseBackup\Utility\BackupManager::delete()</full_name>
        <docblock line="40">
          <description>Deletes a backup file</description>
          <long-description></long-description>
          <tag name="param" line="40" description="&lt;p&gt;Filename of the backup that you want to delete.&#10; The path can be relative to the backup directory&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="40" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="see" line="40" description="" link="https://github.com/mirko-pagliai/cakephp-database-backup/wiki/How-to-use-the-BackupManager-utility#delete"/>
          <tag name="throws" line="40" description="" type="\Tools\Exception\NotWritableException">
            <type>\Tools\Exception\NotWritableException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="56" package="Default">
        <name>deleteAll</name>
        <full_name>\DatabaseBackup\Utility\BackupManager::deleteAll()</full_name>
        <docblock line="56">
          <description>Deletes all backup files</description>
          <long-description></long-description>
          <tag name="return" line="56" description="List of deleted backup files" type="array">
            <type>array</type>
          </tag>
          <tag name="see" line="56" description="" link="https://github.com/mirko-pagliai/cakephp-database-backup/wiki/How-to-use-the-BackupManager-utility#deleteAll"/>
          <tag name="since" line="56" description="1.0.1"/>
          <tag name="uses" line="56" description="" link="\DatabaseBackup\Utility\BackupManager::delete()"/>
          <tag name="uses" line="56" description="" link="\DatabaseBackup\Utility\BackupManager::index()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="69" package="Default">
        <name>index</name>
        <full_name>\DatabaseBackup\Utility\BackupManager::index()</full_name>
        <docblock line="69">
          <description>Returns a list of database backups</description>
          <long-description></long-description>
          <tag name="return" line="69" description="Collection of backups. Each backup&#10; is an entity" type="\Cake\Collection\Collection">
            <type>\Cake\Collection\Collection</type>
          </tag>
          <tag name="see" line="69" description="" link="https://github.com/mirko-pagliai/cakephp-database-backup/wiki/How-to-use-the-BackupManager-utility#index"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="96" package="Default">
        <name>rotate</name>
        <full_name>\DatabaseBackup\Utility\BackupManager::rotate()</full_name>
        <docblock line="96">
          <description>Rotates backups.</description>
          <long-description>You must indicate the number of backups you want to keep. So, it will
 delete all backups that are older.</long-description>
          <tag name="param" line="96" description="&lt;p&gt;Number of backups that you want to keep&lt;/p&gt;" type="integer" variable="$rotate">
            <type>integer</type>
          </tag>
          <tag name="return" line="96" description="Array of deleted files" type="array">
            <type>array</type>
          </tag>
          <tag name="see" line="96" description="" link="https://github.com/mirko-pagliai/cakephp-database-backup/wiki/How-to-use-the-BackupManager-utility#rotate"/>
          <tag name="throws" line="96" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="96" description="" link="\DatabaseBackup\Utility\BackupManager::delete()"/>
          <tag name="uses" line="96" description="" link="\DatabaseBackup\Utility\BackupManager::index()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rotate</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Utility" line="118" package="Default">
        <name>getEmailInstance</name>
        <full_name>\DatabaseBackup\Utility\BackupManager::getEmailInstance()</full_name>
        <docblock line="118">
          <description>Internal method to get an email instance with all options to send a
 backup file via email</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;Backup you want to send&lt;/p&gt;" type="string" variable="$backup">
            <type>string</type>
          </tag>
          <tag name="param" line="118" description="&lt;p&gt;Recipient's email address&lt;/p&gt;" type="string" variable="$recipient">
            <type>string</type>
          </tag>
          <tag name="return" line="118" description="" type="\Cake\Mailer\Email">
            <type>\Cake\Mailer\Email</type>
          </tag>
          <tag name="since" line="118" description="1.1.0"/>
          <tag name="throws" line="118" description="" type="\Tools\Exception\NotReadableException">
            <type>\Tools\Exception\NotReadableException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$backup</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$recipient</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="141" package="Default">
        <name>send</name>
        <full_name>\DatabaseBackup\Utility\BackupManager::send()</full_name>
        <docblock line="141">
          <description>Sends a backup file via email</description>
          <long-description></long-description>
          <tag name="param" line="141" description="&lt;p&gt;Filename of the backup that you want to send via&#10; email. The path can be relative to the backup directory&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="param" line="141" description="&lt;p&gt;Recipient's email address&lt;/p&gt;" type="string" variable="$recipient">
            <type>string</type>
          </tag>
          <tag name="return" line="141" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="141" description="1.1.0"/>
          <tag name="uses" line="141" description="" link="\DatabaseBackup\Utility\BackupManager::getEmailInstance()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$recipient</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="41" package="Default">
        <name>getAbsolutePath</name>
        <full_name>\DatabaseBackup\BackupTrait::getAbsolutePath()</full_name>
        <docblock line="41">
          <description>Returns an absolute path</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;Relative or absolute path&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\BackupTrait::getTarget()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="53" package="Default">
        <name>getBinary</name>
        <full_name>\DatabaseBackup\BackupTrait::getBinary()</full_name>
        <docblock line="53">
          <description>Gets a binary path</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Binary name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="53" description="2.0.0"/>
          <tag name="throws" line="53" description="" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="68" package="Default">
        <name>getCompression</name>
        <full_name>\DatabaseBackup\BackupTrait::getCompression()</full_name>
        <docblock line="68">
          <description>Returns the compression type from a filename</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="Compression type as string or `null`" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getExtension()"/>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getValidCompressions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="82" package="Default">
        <name>getConnection</name>
        <full_name>\DatabaseBackup\BackupTrait::getConnection()</full_name>
        <docblock line="82">
          <description>Gets the connection array</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Connection name&lt;/p&gt;" type="string|null" variable="$name">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="82" description="A connection object" type="\Cake\Datasource\ConnectionInterface">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="97" package="Default">
        <name>getDriver</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriver()</full_name>
        <docblock line="97">
          <description>Gets the driver instance containing all methods to export/import database
 backups, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="97" description="The driver instance" type="object">
            <type>object</type>
          </tag>
          <tag name="since" line="97" description="2.0.0"/>
          <tag name="throws" line="97" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getDriverName()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="118" package="Default">
        <name>getDriverName</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriverName()</full_name>
        <docblock line="118">
          <description>Gets the driver name, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="118" description="The driver name" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="118" description="2.6.2"/>
          <tag name="uses" line="118" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="132" package="Default">
        <name>getExtension</name>
        <full_name>\DatabaseBackup\BackupTrait::getExtension()</full_name>
        <docblock line="132">
          <description>Returns the extension from a filename</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="132" description="Extension or `null` if the extension is not found or&#10; if is an invalid extension" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="132" description="" link="\DatabaseBackup\BackupTrait::getValidExtensions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="143" package="Default">
        <name>getTarget</name>
        <full_name>\DatabaseBackup\BackupTrait::getTarget()</full_name>
        <docblock line="143">
          <description>Returns the target path</description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="154" package="Default">
        <name>getValidCompressions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidCompressions()</full_name>
        <docblock line="154">
          <description>Returns all valid compressions</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="154" description="2.4.0"/>
          <tag name="uses" line="154" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Utility" line="165" package="Default">
        <name>getValidExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidExtensions()</full_name>
        <docblock line="165">
          <description>Returns all valid extensions</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="165" description="2.4.0"/>
          <tag name="uses" line="165" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
    </class>
  </file>
  <file path="Command/RotateCommand.php" generated-path="Command.RotateCommand.html" hash="cf2a92678a9d29fd83a86125bc444485" package="Default">
    <docblock line="0">
      <description>This file is part of cakephp-database-backup.</description>
      <long-description>Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Mirko Pagliai"/>
      <tag name="link" line="0" description="https://github.com/mirko-pagliai/cakephp-database-backup" link="https://github.com/mirko-pagliai/cakephp-database-backup"/>
      <tag name="license" line="0" description="MIT License" link="https://opensource.org/licenses/mit-license.php"/>
      <tag name="since" line="0" description="2.6.0"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Arguments">\Cake\Console\Arguments</namespace-alias>
    <namespace-alias name="ConsoleIo">\Cake\Console\ConsoleIo</namespace-alias>
    <namespace-alias name="ConsoleOptionParser">\Cake\Console\ConsoleOptionParser</namespace-alias>
    <namespace-alias name="Command">\DatabaseBackup\Console\Command</namespace-alias>
    <namespace-alias name="BackupManager">\DatabaseBackup\Utility\BackupManager</namespace-alias>
    <namespace-alias name="Exception">\Exception</namespace-alias>
    <class final="false" abstract="false" namespace="DatabaseBackup\Command" line="26" package="Default">
      <extends>\DatabaseBackup\Console\Command</extends>
      <name>RotateCommand</name>
      <full_name>\DatabaseBackup\Command\RotateCommand</full_name>
      <docblock line="26">
        <description>Rotates backups</description>
        <long-description></long-description>
        <tag name="package" line="26" description="Default"/>
        <tag name="inherited_from" description="\DatabaseBackup\Console\Command" refers="\DatabaseBackup\Console\Command" link="/classes/DatabaseBackup.Console.Command.html"/>
      </docblock>
      <property static="true" visibility="private" namespace="DatabaseBackup\Command" line="33" package="Default">
        <name>$validExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::$validExtensions</full_name>
        <default>array('sql.bz2' =&gt; 'bzip2', 'sql.gz' =&gt; 'gzip', 'sql' =&gt; false)</default>
        <docblock line="33">
          <description>Valid extensions. Names as keys and compressions as values</description>
          <long-description></long-description>
          <tag name="since" line="33" description="2.4.0"/>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Command" line="33" package="Default">
        <name>buildOptionParser</name>
        <full_name>\DatabaseBackup\Command\RotateCommand::buildOptionParser()</full_name>
        <docblock line="33">
          <description>Hook method for defining this command's option parser</description>
          <long-description></long-description>
          <tag name="param" line="33" description="&lt;p&gt;The parser to be defined&lt;/p&gt;" type="\Cake\Console\ConsoleOptionParser" variable="$parser">
            <type>\Cake\Console\ConsoleOptionParser</type>
          </tag>
          <tag name="return" line="33" description="" type="\Cake\Console\ConsoleOptionParser">
            <type>\Cake\Console\ConsoleOptionParser</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\Cake\Console\ConsoleOptionParser</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="53" package="Default">
        <name>execute</name>
        <full_name>\DatabaseBackup\Command\RotateCommand::execute()</full_name>
        <docblock line="53">
          <description>Rotates backups.</description>
          <long-description>You have to indicate the number of backups you want to keep. So, it will
 delete all backups that are older. By default, no backup will be deleted</long-description>
          <tag name="param" line="53" description="&lt;p&gt;The command arguments&lt;/p&gt;" type="\Cake\Console\Arguments" variable="$args">
            <type>\Cake\Console\Arguments</type>
          </tag>
          <tag name="param" line="53" description="&lt;p&gt;The console io&lt;/p&gt;" type="\Cake\Console\ConsoleIo" variable="$io">
            <type>\Cake\Console\ConsoleIo</type>
          </tag>
          <tag name="return" line="53" description="The exit code or null for success" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
          <tag name="see" line="53" description="" link="https://github.com/mirko-pagliai/cakephp-database-backup/wiki/How-to-use-the-BackupShell#rotate"/>
          <tag name="uses" line="53" description="" link="\DatabaseBackup\Utility\BackupManager::rotate()"/>
          <tag name="inherited_from" description="\DatabaseBackup\Console\Command::execute()" refers="\DatabaseBackup\Console\Command::execute()" link="/classes/DatabaseBackup.Console.Command.html#method_execute"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>\Cake\Console\Arguments</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$io</name>
          <default></default>
          <type>\Cake\Console\ConsoleIo</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="34" package="Default">
        <name>execute</name>
        <full_name>\DatabaseBackup\Console\Command::execute()</full_name>
        <docblock line="34">
          <description>Implement this method with your command's logic</description>
          <long-description></long-description>
          <tag name="param" line="34" description="&lt;p&gt;The command arguments&lt;/p&gt;" type="\Cake\Console\Arguments" variable="$args">
            <type>\Cake\Console\Arguments</type>
          </tag>
          <tag name="param" line="34" description="&lt;p&gt;The console io&lt;/p&gt;" type="\Cake\Console\ConsoleIo" variable="$io">
            <type>\Cake\Console\ConsoleIo</type>
          </tag>
          <tag name="return" line="34" description="The exit code or null for success" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>\Cake\Console\Arguments</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$io</name>
          <default></default>
          <type>\Cake\Console\ConsoleIo</type>
        </argument>
        <inherited_from>\DatabaseBackup\Console\Command</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="41" package="Default">
        <name>getAbsolutePath</name>
        <full_name>\DatabaseBackup\BackupTrait::getAbsolutePath()</full_name>
        <docblock line="41">
          <description>Returns an absolute path</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;Relative or absolute path&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\BackupTrait::getTarget()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="53" package="Default">
        <name>getBinary</name>
        <full_name>\DatabaseBackup\BackupTrait::getBinary()</full_name>
        <docblock line="53">
          <description>Gets a binary path</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Binary name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="53" description="2.0.0"/>
          <tag name="throws" line="53" description="" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="68" package="Default">
        <name>getCompression</name>
        <full_name>\DatabaseBackup\BackupTrait::getCompression()</full_name>
        <docblock line="68">
          <description>Returns the compression type from a filename</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="Compression type as string or `null`" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getExtension()"/>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getValidCompressions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="82" package="Default">
        <name>getConnection</name>
        <full_name>\DatabaseBackup\BackupTrait::getConnection()</full_name>
        <docblock line="82">
          <description>Gets the connection array</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Connection name&lt;/p&gt;" type="string|null" variable="$name">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="82" description="A connection object" type="\Cake\Datasource\ConnectionInterface">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="97" package="Default">
        <name>getDriver</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriver()</full_name>
        <docblock line="97">
          <description>Gets the driver instance containing all methods to export/import database
 backups, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="97" description="The driver instance" type="object">
            <type>object</type>
          </tag>
          <tag name="since" line="97" description="2.0.0"/>
          <tag name="throws" line="97" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getDriverName()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="118" package="Default">
        <name>getDriverName</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriverName()</full_name>
        <docblock line="118">
          <description>Gets the driver name, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="118" description="The driver name" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="118" description="2.6.2"/>
          <tag name="uses" line="118" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="132" package="Default">
        <name>getExtension</name>
        <full_name>\DatabaseBackup\BackupTrait::getExtension()</full_name>
        <docblock line="132">
          <description>Returns the extension from a filename</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="132" description="Extension or `null` if the extension is not found or&#10; if is an invalid extension" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="132" description="" link="\DatabaseBackup\BackupTrait::getValidExtensions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="143" package="Default">
        <name>getTarget</name>
        <full_name>\DatabaseBackup\BackupTrait::getTarget()</full_name>
        <docblock line="143">
          <description>Returns the target path</description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="154" package="Default">
        <name>getValidCompressions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidCompressions()</full_name>
        <docblock line="154">
          <description>Returns all valid compressions</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="154" description="2.4.0"/>
          <tag name="uses" line="154" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="165" package="Default">
        <name>getValidExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidExtensions()</full_name>
        <docblock line="165">
          <description>Returns all valid extensions</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="165" description="2.4.0"/>
          <tag name="uses" line="165" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
    </class>
  </file>
  <file path="Plugin.php" generated-path="Plugin.html" hash="ddb5b99cc990598bfd6171ce1e3f6b74" package="Default">
    <docblock line="0">
      <description>This file is part of cakephp-database-backup.</description>
      <long-description>Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Mirko Pagliai"/>
      <tag name="link" line="0" description="https://github.com/mirko-pagliai/cakephp-database-backup" link="https://github.com/mirko-pagliai/cakephp-database-backup"/>
      <tag name="license" line="0" description="MIT License" link="https://opensource.org/licenses/mit-license.php"/>
      <tag name="since" line="0" description="2.6.0"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="BasePlugin">\Cake\Core\BasePlugin</namespace-alias>
    <namespace-alias name="DeleteAllCommand">\DatabaseBackup\Command\DeleteAllCommand</namespace-alias>
    <namespace-alias name="ExportCommand">\DatabaseBackup\Command\ExportCommand</namespace-alias>
    <namespace-alias name="ImportCommand">\DatabaseBackup\Command\ImportCommand</namespace-alias>
    <namespace-alias name="IndexCommand">\DatabaseBackup\Command\IndexCommand</namespace-alias>
    <namespace-alias name="RotateCommand">\DatabaseBackup\Command\RotateCommand</namespace-alias>
    <namespace-alias name="SendCommand">\DatabaseBackup\Command\SendCommand</namespace-alias>
    <class final="false" abstract="false" namespace="DatabaseBackup" line="27" package="Default">
      <extends>\Cake\Core\BasePlugin</extends>
      <name>Plugin</name>
      <full_name>\DatabaseBackup\Plugin</full_name>
      <docblock line="27">
        <description>Plugin class</description>
        <long-description></long-description>
        <tag name="package" line="27" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup" line="34" package="Default">
        <name>console</name>
        <full_name>\DatabaseBackup\Plugin::console()</full_name>
        <docblock line="34">
          <description>Add console commands for the plugin</description>
          <long-description></long-description>
          <tag name="param" line="34" description="&lt;p&gt;The command collection to update&lt;/p&gt;" type="\Cake\Console\CommandCollection" variable="$commands">
            <type>\Cake\Console\CommandCollection</type>
          </tag>
          <tag name="return" line="34" description="" type="\Cake\Console\CommandCollection">
            <type>\Cake\Console\CommandCollection</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$commands</name>
          <default></default>
          <type>\Cake\Console\CommandCollection</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="Driver/Driver.php" generated-path="Driver.Driver.html" hash="e3cf0f341680934dd994d7f6caa4edf5" package="Default">
    <docblock line="0">
      <description>This file is part of cakephp-database-backup.</description>
      <long-description>Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Mirko Pagliai"/>
      <tag name="link" line="0" description="https://github.com/mirko-pagliai/cakephp-database-backup" link="https://github.com/mirko-pagliai/cakephp-database-backup"/>
      <tag name="license" line="0" description="MIT License" link="https://opensource.org/licenses/mit-license.php"/>
      <tag name="since" line="0" description="2.0.0"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Configure">\Cake\Core\Configure</namespace-alias>
    <namespace-alias name="EventDispatcherTrait">\Cake\Event\EventDispatcherTrait</namespace-alias>
    <namespace-alias name="EventListenerInterface">\Cake\Event\EventListenerInterface</namespace-alias>
    <namespace-alias name="BackupTrait">\DatabaseBackup\BackupTrait</namespace-alias>
    <class final="false" abstract="true" namespace="DatabaseBackup\Driver" line="25" package="Default">
      <extends/>
      <implements>\Cake\Event\EventListenerInterface</implements>
      <name>Driver</name>
      <full_name>\DatabaseBackup\Driver\Driver</full_name>
      <docblock line="25">
        <description>Represents a driver containing all methods to export/import database backups
 according to the database engine</description>
        <long-description></long-description>
        <tag name="package" line="25" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="34" package="Default">
        <name>$connection</name>
        <full_name>\DatabaseBackup\Driver\Driver::$connection</full_name>
        <default></default>
        <docblock line="34">
          <description>A connection object</description>
          <long-description></long-description>
          <tag name="var" line="34" description="" type="\Cake\Datasource\ConnectionInterface" variable="">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="DatabaseBackup\Driver" line="33" package="Default">
        <name>$validExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::$validExtensions</full_name>
        <default>array('sql.bz2' =&gt; 'bzip2', 'sql.gz' =&gt; 'gzip', 'sql' =&gt; false)</default>
        <docblock line="33">
          <description>Valid extensions. Names as keys and compressions as values</description>
          <long-description></long-description>
          <tag name="since" line="33" description="2.4.0"/>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="41" package="Default">
        <name>__construct</name>
        <full_name>\DatabaseBackup\Driver\Driver::__construct()</full_name>
        <docblock line="41">
          <description>Construct</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\Driver\Driver::$connection"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default></default>
          <type>\Cake\Datasource\ConnectionInterface</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="58" package="Default">
        <name>implementedEvents</name>
        <full_name>\DatabaseBackup\Driver\Driver::implementedEvents()</full_name>
        <docblock line="58">
          <description>List of events this object is implementing. When the class is registered
 in an event manager, each individual method will be associated with the
 respective event</description>
          <long-description></long-description>
          <tag name="return" line="58" description="Associative array or event key names pointing to the&#10; function that should be called in the object when the respective event&#10; is fired" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="58" description="2.1.1"/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="72" package="Default">
        <name>_exportExecutable</name>
        <full_name>\DatabaseBackup\Driver\Driver::_exportExecutable()</full_name>
        <docblock line="72">
          <description>Gets the executable command to export the database</description>
          <long-description></long-description>
          <tag name="return" line="72" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="78" package="Default">
        <name>_importExecutable</name>
        <full_name>\DatabaseBackup\Driver\Driver::_importExecutable()</full_name>
        <docblock line="78">
          <description>Gets the executable command to import the database</description>
          <long-description></long-description>
          <tag name="return" line="78" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="85" package="Default">
        <name>afterExport</name>
        <full_name>\DatabaseBackup\Driver\Driver::afterExport()</full_name>
        <docblock line="85">
          <description>Called after export</description>
          <long-description></long-description>
          <tag name="return" line="85" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="since" line="85" description="2.1.0"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="94" package="Default">
        <name>afterImport</name>
        <full_name>\DatabaseBackup\Driver\Driver::afterImport()</full_name>
        <docblock line="94">
          <description>Called after import</description>
          <long-description></long-description>
          <tag name="return" line="94" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="since" line="94" description="2.1.0"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="103" package="Default">
        <name>beforeExport</name>
        <full_name>\DatabaseBackup\Driver\Driver::beforeExport()</full_name>
        <docblock line="103">
          <description>Called before export</description>
          <long-description></long-description>
          <tag name="return" line="103" description="Returns `false` to stop the export" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="since" line="103" description="2.1.0"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="113" package="Default">
        <name>beforeImport</name>
        <full_name>\DatabaseBackup\Driver\Driver::beforeImport()</full_name>
        <docblock line="113">
          <description>Called before import</description>
          <long-description></long-description>
          <tag name="return" line="113" description="Returns `false` to stop the import" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="since" line="113" description="2.1.0"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="124" package="Default">
        <name>_exportExecutableWithCompression</name>
        <full_name>\DatabaseBackup\Driver\Driver::_exportExecutableWithCompression()</full_name>
        <docblock line="124">
          <description>Gets the executable command to export the database, with compression</description>
          <long-description></long-description>
          <tag name="param" line="124" description="&lt;p&gt;Filename where you want to export the database&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="124" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="124" description="" link="\DatabaseBackup\Driver\Driver::_exportExecutable()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Driver" line="147" package="Default">
        <name>_importExecutableWithCompression</name>
        <full_name>\DatabaseBackup\Driver\Driver::_importExecutableWithCompression()</full_name>
        <docblock line="147">
          <description>Gets the executable command to import the database, with compression</description>
          <long-description></long-description>
          <tag name="param" line="147" description="&lt;p&gt;Filename from which you want to import the database&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="147" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="147" description="" link="\DatabaseBackup\Driver\Driver::_importExecutable()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="176" package="Default">
        <name>export</name>
        <full_name>\DatabaseBackup\Driver\Driver::export()</full_name>
        <docblock line="176">
          <description>Exports the database.</description>
          <long-description>When exporting, this method will trigger these events:

- Backup.beforeExport: will be triggered before export
- Backup.afterExport: will be triggered after export</long-description>
          <tag name="param" line="176" description="&lt;p&gt;Filename where you want to export the database&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="176" description="true on success" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="176" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="uses" line="176" description="" link="\DatabaseBackup\Driver\Driver::_exportExecutableWithCompression()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="200" package="Default">
        <name>getConfig</name>
        <full_name>\DatabaseBackup\Driver\Driver::getConfig()</full_name>
        <docblock line="200">
          <description>Gets a config value or the whole configuration</description>
          <long-description></long-description>
          <tag name="param" line="200" description="&lt;p&gt;Config key or &lt;code&gt;null&lt;/code&gt; to get all config values&lt;/p&gt;" type="string|null" variable="$key">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="200" description="Config value, `null` if the key doesn't exist&#10; or all config values if no key was specified" type="array|string|null">
            <type>array</type>
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="since" line="200" description="2.3.0"/>
          <tag name="uses" line="200" description="" link="\DatabaseBackup\Driver\Driver::$connection"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="219" package="Default">
        <name>import</name>
        <full_name>\DatabaseBackup\Driver\Driver::import()</full_name>
        <docblock line="219">
          <description>Imports the database.</description>
          <long-description>When importing, this method will trigger these events:

- Backup.beforeImport: will be triggered before import
- Backup.afterImport: will be triggered after import</long-description>
          <tag name="param" line="219" description="&lt;p&gt;Filename from which you want to import the database&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="219" description="true on success" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="219" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="uses" line="219" description="" link="\DatabaseBackup\Driver\Driver::_importExecutableWithCompression()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="41" package="Default">
        <name>getAbsolutePath</name>
        <full_name>\DatabaseBackup\BackupTrait::getAbsolutePath()</full_name>
        <docblock line="41">
          <description>Returns an absolute path</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;Relative or absolute path&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\BackupTrait::getTarget()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="53" package="Default">
        <name>getBinary</name>
        <full_name>\DatabaseBackup\BackupTrait::getBinary()</full_name>
        <docblock line="53">
          <description>Gets a binary path</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Binary name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="53" description="2.0.0"/>
          <tag name="throws" line="53" description="" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="68" package="Default">
        <name>getCompression</name>
        <full_name>\DatabaseBackup\BackupTrait::getCompression()</full_name>
        <docblock line="68">
          <description>Returns the compression type from a filename</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="Compression type as string or `null`" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getExtension()"/>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getValidCompressions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="82" package="Default">
        <name>getConnection</name>
        <full_name>\DatabaseBackup\BackupTrait::getConnection()</full_name>
        <docblock line="82">
          <description>Gets the connection array</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Connection name&lt;/p&gt;" type="string|null" variable="$name">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="82" description="A connection object" type="\Cake\Datasource\ConnectionInterface">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="97" package="Default">
        <name>getDriver</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriver()</full_name>
        <docblock line="97">
          <description>Gets the driver instance containing all methods to export/import database
 backups, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="97" description="The driver instance" type="object">
            <type>object</type>
          </tag>
          <tag name="since" line="97" description="2.0.0"/>
          <tag name="throws" line="97" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getDriverName()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="118" package="Default">
        <name>getDriverName</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriverName()</full_name>
        <docblock line="118">
          <description>Gets the driver name, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="118" description="The driver name" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="118" description="2.6.2"/>
          <tag name="uses" line="118" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="132" package="Default">
        <name>getExtension</name>
        <full_name>\DatabaseBackup\BackupTrait::getExtension()</full_name>
        <docblock line="132">
          <description>Returns the extension from a filename</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="132" description="Extension or `null` if the extension is not found or&#10; if is an invalid extension" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="132" description="" link="\DatabaseBackup\BackupTrait::getValidExtensions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="143" package="Default">
        <name>getTarget</name>
        <full_name>\DatabaseBackup\BackupTrait::getTarget()</full_name>
        <docblock line="143">
          <description>Returns the target path</description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="154" package="Default">
        <name>getValidCompressions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidCompressions()</full_name>
        <docblock line="154">
          <description>Returns all valid compressions</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="154" description="2.4.0"/>
          <tag name="uses" line="154" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Driver" line="165" package="Default">
        <name>getValidExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidExtensions()</full_name>
        <docblock line="165">
          <description>Returns all valid extensions</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="165" description="2.4.0"/>
          <tag name="uses" line="165" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
    </class>
  </file>
  <file path="Command/IndexCommand.php" generated-path="Command.IndexCommand.html" hash="2a91cccb58cadf5cae93f8d0b4db232a" package="Default">
    <docblock line="0">
      <description>This file is part of cakephp-database-backup.</description>
      <long-description>Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Mirko Pagliai"/>
      <tag name="link" line="0" description="https://github.com/mirko-pagliai/cakephp-database-backup" link="https://github.com/mirko-pagliai/cakephp-database-backup"/>
      <tag name="license" line="0" description="MIT License" link="https://opensource.org/licenses/mit-license.php"/>
      <tag name="since" line="0" description="2.6.0"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Arguments">\Cake\Console\Arguments</namespace-alias>
    <namespace-alias name="ConsoleIo">\Cake\Console\ConsoleIo</namespace-alias>
    <namespace-alias name="ConsoleOptionParser">\Cake\Console\ConsoleOptionParser</namespace-alias>
    <namespace-alias name="Number">\Cake\I18n\Number</namespace-alias>
    <namespace-alias name="Entity">\Cake\ORM\Entity</namespace-alias>
    <namespace-alias name="Command">\DatabaseBackup\Console\Command</namespace-alias>
    <namespace-alias name="BackupManager">\DatabaseBackup\Utility\BackupManager</namespace-alias>
    <class final="false" abstract="false" namespace="DatabaseBackup\Command" line="27" package="Default">
      <extends>\DatabaseBackup\Console\Command</extends>
      <name>IndexCommand</name>
      <full_name>\DatabaseBackup\Command\IndexCommand</full_name>
      <docblock line="27">
        <description>Lists database backups</description>
        <long-description></long-description>
        <tag name="package" line="27" description="Default"/>
        <tag name="inherited_from" description="\DatabaseBackup\Console\Command" refers="\DatabaseBackup\Console\Command" link="/classes/DatabaseBackup.Console.Command.html"/>
      </docblock>
      <property static="true" visibility="private" namespace="DatabaseBackup\Command" line="33" package="Default">
        <name>$validExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::$validExtensions</full_name>
        <default>array('sql.bz2' =&gt; 'bzip2', 'sql.gz' =&gt; 'gzip', 'sql' =&gt; false)</default>
        <docblock line="33">
          <description>Valid extensions. Names as keys and compressions as values</description>
          <long-description></long-description>
          <tag name="since" line="33" description="2.4.0"/>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Command" line="34" package="Default">
        <name>buildOptionParser</name>
        <full_name>\DatabaseBackup\Command\IndexCommand::buildOptionParser()</full_name>
        <docblock line="34">
          <description>Hook method for defining this command's option parser</description>
          <long-description></long-description>
          <tag name="param" line="34" description="&lt;p&gt;The parser to be defined&lt;/p&gt;" type="\Cake\Console\ConsoleOptionParser" variable="$parser">
            <type>\Cake\Console\ConsoleOptionParser</type>
          </tag>
          <tag name="return" line="34" description="" type="\Cake\Console\ConsoleOptionParser">
            <type>\Cake\Console\ConsoleOptionParser</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\Cake\Console\ConsoleOptionParser</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="47" package="Default">
        <name>execute</name>
        <full_name>\DatabaseBackup\Command\IndexCommand::execute()</full_name>
        <docblock line="47">
          <description>Lists database backups</description>
          <long-description></long-description>
          <tag name="param" line="47" description="&lt;p&gt;The command arguments&lt;/p&gt;" type="\Cake\Console\Arguments" variable="$args">
            <type>\Cake\Console\Arguments</type>
          </tag>
          <tag name="param" line="47" description="&lt;p&gt;The console io&lt;/p&gt;" type="\Cake\Console\ConsoleIo" variable="$io">
            <type>\Cake\Console\ConsoleIo</type>
          </tag>
          <tag name="return" line="47" description="The exit code or null for success" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
          <tag name="see" line="47" description="" link="https://github.com/mirko-pagliai/cakephp-database-backup/wiki/How-to-use-the-BackupShell#index"/>
          <tag name="uses" line="47" description="" link="\DatabaseBackup\Utility\BackupManager::index()"/>
          <tag name="inherited_from" description="\DatabaseBackup\Console\Command::execute()" refers="\DatabaseBackup\Console\Command::execute()" link="/classes/DatabaseBackup.Console.Command.html#method_execute"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>\Cake\Console\Arguments</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$io</name>
          <default></default>
          <type>\Cake\Console\ConsoleIo</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="34" package="Default">
        <name>execute</name>
        <full_name>\DatabaseBackup\Console\Command::execute()</full_name>
        <docblock line="34">
          <description>Implement this method with your command's logic</description>
          <long-description></long-description>
          <tag name="param" line="34" description="&lt;p&gt;The command arguments&lt;/p&gt;" type="\Cake\Console\Arguments" variable="$args">
            <type>\Cake\Console\Arguments</type>
          </tag>
          <tag name="param" line="34" description="&lt;p&gt;The console io&lt;/p&gt;" type="\Cake\Console\ConsoleIo" variable="$io">
            <type>\Cake\Console\ConsoleIo</type>
          </tag>
          <tag name="return" line="34" description="The exit code or null for success" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>\Cake\Console\Arguments</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$io</name>
          <default></default>
          <type>\Cake\Console\ConsoleIo</type>
        </argument>
        <inherited_from>\DatabaseBackup\Console\Command</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="41" package="Default">
        <name>getAbsolutePath</name>
        <full_name>\DatabaseBackup\BackupTrait::getAbsolutePath()</full_name>
        <docblock line="41">
          <description>Returns an absolute path</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;Relative or absolute path&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\BackupTrait::getTarget()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="53" package="Default">
        <name>getBinary</name>
        <full_name>\DatabaseBackup\BackupTrait::getBinary()</full_name>
        <docblock line="53">
          <description>Gets a binary path</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Binary name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="53" description="2.0.0"/>
          <tag name="throws" line="53" description="" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="68" package="Default">
        <name>getCompression</name>
        <full_name>\DatabaseBackup\BackupTrait::getCompression()</full_name>
        <docblock line="68">
          <description>Returns the compression type from a filename</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="Compression type as string or `null`" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getExtension()"/>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getValidCompressions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="82" package="Default">
        <name>getConnection</name>
        <full_name>\DatabaseBackup\BackupTrait::getConnection()</full_name>
        <docblock line="82">
          <description>Gets the connection array</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Connection name&lt;/p&gt;" type="string|null" variable="$name">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="82" description="A connection object" type="\Cake\Datasource\ConnectionInterface">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="97" package="Default">
        <name>getDriver</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriver()</full_name>
        <docblock line="97">
          <description>Gets the driver instance containing all methods to export/import database
 backups, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="97" description="The driver instance" type="object">
            <type>object</type>
          </tag>
          <tag name="since" line="97" description="2.0.0"/>
          <tag name="throws" line="97" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getDriverName()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="118" package="Default">
        <name>getDriverName</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriverName()</full_name>
        <docblock line="118">
          <description>Gets the driver name, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="118" description="The driver name" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="118" description="2.6.2"/>
          <tag name="uses" line="118" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="132" package="Default">
        <name>getExtension</name>
        <full_name>\DatabaseBackup\BackupTrait::getExtension()</full_name>
        <docblock line="132">
          <description>Returns the extension from a filename</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="132" description="Extension or `null` if the extension is not found or&#10; if is an invalid extension" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="132" description="" link="\DatabaseBackup\BackupTrait::getValidExtensions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="143" package="Default">
        <name>getTarget</name>
        <full_name>\DatabaseBackup\BackupTrait::getTarget()</full_name>
        <docblock line="143">
          <description>Returns the target path</description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="154" package="Default">
        <name>getValidCompressions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidCompressions()</full_name>
        <docblock line="154">
          <description>Returns all valid compressions</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="154" description="2.4.0"/>
          <tag name="uses" line="154" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="165" package="Default">
        <name>getValidExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidExtensions()</full_name>
        <docblock line="165">
          <description>Returns all valid extensions</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="165" description="2.4.0"/>
          <tag name="uses" line="165" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
    </class>
  </file>
  <file path="Command/ImportCommand.php" generated-path="Command.ImportCommand.html" hash="4ec714d054c9b7486c5762d2d1bef609" package="Default">
    <docblock line="0">
      <description>This file is part of cakephp-database-backup.</description>
      <long-description>Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Mirko Pagliai"/>
      <tag name="link" line="0" description="https://github.com/mirko-pagliai/cakephp-database-backup" link="https://github.com/mirko-pagliai/cakephp-database-backup"/>
      <tag name="license" line="0" description="MIT License" link="https://opensource.org/licenses/mit-license.php"/>
      <tag name="since" line="0" description="2.6.0"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Arguments">\Cake\Console\Arguments</namespace-alias>
    <namespace-alias name="ConsoleIo">\Cake\Console\ConsoleIo</namespace-alias>
    <namespace-alias name="ConsoleOptionParser">\Cake\Console\ConsoleOptionParser</namespace-alias>
    <namespace-alias name="Command">\DatabaseBackup\Console\Command</namespace-alias>
    <namespace-alias name="BackupImport">\DatabaseBackup\Utility\BackupImport</namespace-alias>
    <namespace-alias name="Exception">\Exception</namespace-alias>
    <class final="false" abstract="false" namespace="DatabaseBackup\Command" line="26" package="Default">
      <extends>\DatabaseBackup\Console\Command</extends>
      <name>ImportCommand</name>
      <full_name>\DatabaseBackup\Command\ImportCommand</full_name>
      <docblock line="26">
        <description>Imports a database backup</description>
        <long-description></long-description>
        <tag name="package" line="26" description="Default"/>
        <tag name="inherited_from" description="\DatabaseBackup\Console\Command" refers="\DatabaseBackup\Console\Command" link="/classes/DatabaseBackup.Console.Command.html"/>
      </docblock>
      <property static="true" visibility="private" namespace="DatabaseBackup\Command" line="33" package="Default">
        <name>$validExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::$validExtensions</full_name>
        <default>array('sql.bz2' =&gt; 'bzip2', 'sql.gz' =&gt; 'gzip', 'sql' =&gt; false)</default>
        <docblock line="33">
          <description>Valid extensions. Names as keys and compressions as values</description>
          <long-description></long-description>
          <tag name="since" line="33" description="2.4.0"/>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\Command" line="33" package="Default">
        <name>buildOptionParser</name>
        <full_name>\DatabaseBackup\Command\ImportCommand::buildOptionParser()</full_name>
        <docblock line="33">
          <description>Hook method for defining this command's option parser</description>
          <long-description></long-description>
          <tag name="param" line="33" description="&lt;p&gt;The parser to be defined&lt;/p&gt;" type="\Cake\Console\ConsoleOptionParser" variable="$parser">
            <type>\Cake\Console\ConsoleOptionParser</type>
          </tag>
          <tag name="return" line="33" description="" type="\Cake\Console\ConsoleOptionParser">
            <type>\Cake\Console\ConsoleOptionParser</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\Cake\Console\ConsoleOptionParser</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="51" package="Default">
        <name>execute</name>
        <full_name>\DatabaseBackup\Command\ImportCommand::execute()</full_name>
        <docblock line="51">
          <description>Imports a database backup</description>
          <long-description></long-description>
          <tag name="param" line="51" description="&lt;p&gt;The command arguments&lt;/p&gt;" type="\Cake\Console\Arguments" variable="$args">
            <type>\Cake\Console\Arguments</type>
          </tag>
          <tag name="param" line="51" description="&lt;p&gt;The console io&lt;/p&gt;" type="\Cake\Console\ConsoleIo" variable="$io">
            <type>\Cake\Console\ConsoleIo</type>
          </tag>
          <tag name="return" line="51" description="The exit code or null for success" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
          <tag name="see" line="51" description="" link="https://github.com/mirko-pagliai/cakephp-database-backup/wiki/How-to-use-the-BackupShell#import"/>
          <tag name="uses" line="51" description="" link="\DatabaseBackup\Utility\BackupImport::filename()"/>
          <tag name="uses" line="51" description="" link="\DatabaseBackup\Utility\BackupImport::import()"/>
          <tag name="inherited_from" description="\DatabaseBackup\Console\Command::execute()" refers="\DatabaseBackup\Console\Command::execute()" link="/classes/DatabaseBackup.Console.Command.html#method_execute"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>\Cake\Console\Arguments</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$io</name>
          <default></default>
          <type>\Cake\Console\ConsoleIo</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="34" package="Default">
        <name>execute</name>
        <full_name>\DatabaseBackup\Console\Command::execute()</full_name>
        <docblock line="34">
          <description>Implement this method with your command's logic</description>
          <long-description></long-description>
          <tag name="param" line="34" description="&lt;p&gt;The command arguments&lt;/p&gt;" type="\Cake\Console\Arguments" variable="$args">
            <type>\Cake\Console\Arguments</type>
          </tag>
          <tag name="param" line="34" description="&lt;p&gt;The console io&lt;/p&gt;" type="\Cake\Console\ConsoleIo" variable="$io">
            <type>\Cake\Console\ConsoleIo</type>
          </tag>
          <tag name="return" line="34" description="The exit code or null for success" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>\Cake\Console\Arguments</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$io</name>
          <default></default>
          <type>\Cake\Console\ConsoleIo</type>
        </argument>
        <inherited_from>\DatabaseBackup\Console\Command</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="41" package="Default">
        <name>getAbsolutePath</name>
        <full_name>\DatabaseBackup\BackupTrait::getAbsolutePath()</full_name>
        <docblock line="41">
          <description>Returns an absolute path</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;Relative or absolute path&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\BackupTrait::getTarget()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="53" package="Default">
        <name>getBinary</name>
        <full_name>\DatabaseBackup\BackupTrait::getBinary()</full_name>
        <docblock line="53">
          <description>Gets a binary path</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Binary name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="53" description="2.0.0"/>
          <tag name="throws" line="53" description="" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="68" package="Default">
        <name>getCompression</name>
        <full_name>\DatabaseBackup\BackupTrait::getCompression()</full_name>
        <docblock line="68">
          <description>Returns the compression type from a filename</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="Compression type as string or `null`" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getExtension()"/>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getValidCompressions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="82" package="Default">
        <name>getConnection</name>
        <full_name>\DatabaseBackup\BackupTrait::getConnection()</full_name>
        <docblock line="82">
          <description>Gets the connection array</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Connection name&lt;/p&gt;" type="string|null" variable="$name">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="82" description="A connection object" type="\Cake\Datasource\ConnectionInterface">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="97" package="Default">
        <name>getDriver</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriver()</full_name>
        <docblock line="97">
          <description>Gets the driver instance containing all methods to export/import database
 backups, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="97" description="The driver instance" type="object">
            <type>object</type>
          </tag>
          <tag name="since" line="97" description="2.0.0"/>
          <tag name="throws" line="97" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getDriverName()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="118" package="Default">
        <name>getDriverName</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriverName()</full_name>
        <docblock line="118">
          <description>Gets the driver name, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="118" description="The driver name" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="118" description="2.6.2"/>
          <tag name="uses" line="118" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="132" package="Default">
        <name>getExtension</name>
        <full_name>\DatabaseBackup\BackupTrait::getExtension()</full_name>
        <docblock line="132">
          <description>Returns the extension from a filename</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="132" description="Extension or `null` if the extension is not found or&#10; if is an invalid extension" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="132" description="" link="\DatabaseBackup\BackupTrait::getValidExtensions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="143" package="Default">
        <name>getTarget</name>
        <full_name>\DatabaseBackup\BackupTrait::getTarget()</full_name>
        <docblock line="143">
          <description>Returns the target path</description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="154" package="Default">
        <name>getValidCompressions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidCompressions()</full_name>
        <docblock line="154">
          <description>Returns all valid compressions</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="154" description="2.4.0"/>
          <tag name="uses" line="154" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Command" line="165" package="Default">
        <name>getValidExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidExtensions()</full_name>
        <docblock line="165">
          <description>Returns all valid extensions</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="165" description="2.4.0"/>
          <tag name="uses" line="165" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
    </class>
  </file>
  <file path="TestSuite/DriverTestCase.php" generated-path="TestSuite.DriverTestCase.html" hash="8e842ac83b3db19b2a21761d5690a9cc" package="Default">
    <docblock line="0">
      <description>This file is part of cakephp-database-backup.</description>
      <long-description>Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Mirko Pagliai"/>
      <tag name="link" line="0" description="https://github.com/mirko-pagliai/cakephp-database-backup" link="https://github.com/mirko-pagliai/cakephp-database-backup"/>
      <tag name="license" line="0" description="MIT License" link="https://opensource.org/licenses/mit-license.php"/>
      <tag name="since" line="0" description="2.0.0"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Configure">\Cake\Core\Configure</namespace-alias>
    <namespace-alias name="EventList">\Cake\Event\EventList</namespace-alias>
    <namespace-alias name="TestCase">\DatabaseBackup\TestSuite\TestCase</namespace-alias>
    <class final="false" abstract="true" namespace="DatabaseBackup\TestSuite" line="25" package="Default">
      <extends>\DatabaseBackup\TestSuite\TestCase</extends>
      <name>DriverTestCase</name>
      <full_name>\DatabaseBackup\TestSuite\DriverTestCase</full_name>
      <docblock line="25">
        <description>DriverTestCase class.</description>
        <long-description>Classes with tests for driver must extend this class.</long-description>
        <tag name="package" line="25" description="Default"/>
        <tag name="inherited_from" description="\DatabaseBackup\TestSuite\TestCase" refers="\DatabaseBackup\TestSuite\TestCase" link="/classes/DatabaseBackup.TestSuite.TestCase.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="DatabaseBackup\TestSuite" line="31" package="Default">
        <name>$Articles</name>
        <full_name>\DatabaseBackup\TestSuite\DriverTestCase::$Articles</full_name>
        <default></default>
        <docblock line="31">
          <description>`Articles` table</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="\Cake\ORM\Table" variable="">
            <type>\Cake\ORM\Table</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="DatabaseBackup\TestSuite" line="37" package="Default">
        <name>$Comments</name>
        <full_name>\DatabaseBackup\TestSuite\DriverTestCase::$Comments</full_name>
        <default></default>
        <docblock line="37">
          <description>`Comments` table</description>
          <long-description></long-description>
          <tag name="var" line="37" description="" type="\Cake\ORM\Table" variable="">
            <type>\Cake\ORM\Table</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="DatabaseBackup\TestSuite" line="43" package="Default">
        <name>$Driver</name>
        <full_name>\DatabaseBackup\TestSuite\DriverTestCase::$Driver</full_name>
        <default></default>
        <docblock line="43">
          <description>`Driver` instance</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="\DatabaseBackup\Driver\Driver" variable="">
            <type>\DatabaseBackup\Driver\Driver</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="DatabaseBackup\TestSuite" line="50" package="Default">
        <name>$DriverClass</name>
        <full_name>\DatabaseBackup\TestSuite\DriverTestCase::$DriverClass</full_name>
        <default></default>
        <docblock line="50">
          <description>Driver class</description>
          <long-description></long-description>
          <tag name="since" line="50" description="2.5.1"/>
          <tag name="var" line="50" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="56" package="Default">
        <name>$autoFixtures</name>
        <full_name>\DatabaseBackup\TestSuite\DriverTestCase::$autoFixtures</full_name>
        <default>false</default>
        <docblock line="56">
          <description>Auto fixtures</description>
          <long-description></long-description>
          <tag name="var" line="56" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="DatabaseBackup\TestSuite" line="62" package="Default">
        <name>$connection</name>
        <full_name>\DatabaseBackup\TestSuite\DriverTestCase::$connection</full_name>
        <default></default>
        <docblock line="62">
          <description>Name of the database connection</description>
          <long-description></long-description>
          <tag name="var" line="62" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="68" package="Default">
        <name>$fixtures</name>
        <full_name>\DatabaseBackup\TestSuite\DriverTestCase::$fixtures</full_name>
        <default></default>
        <docblock line="68">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="68" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="DatabaseBackup\TestSuite" line="32" package="Default">
        <name>$BackupExport</name>
        <full_name>\DatabaseBackup\TestSuite\TestCase::$BackupExport</full_name>
        <default></default>
        <docblock line="32">
          <description>`BackupManager` instance</description>
          <long-description></long-description>
          <tag name="var" line="32" description="" type="\DatabaseBackup\Utility\BackupExport" variable="">
            <type>\DatabaseBackup\Utility\BackupExport</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="DatabaseBackup\TestSuite" line="33" package="Default">
        <name>$validExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::$validExtensions</full_name>
        <default>array('sql.bz2' =&gt; 'bzip2', 'sql.gz' =&gt; 'gzip', 'sql' =&gt; false)</default>
        <docblock line="33">
          <description>Valid extensions. Names as keys and compressions as values</description>
          <long-description></long-description>
          <tag name="since" line="33" description="2.4.0"/>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="74" package="Default">
        <name>setUp</name>
        <full_name>\DatabaseBackup\TestSuite\DriverTestCase::setUp()</full_name>
        <docblock line="74">
          <description>Called before every test method</description>
          <long-description></long-description>
          <tag name="return" line="74" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\DatabaseBackup\TestSuite\TestCase::setUp()" refers="\DatabaseBackup\TestSuite\TestCase::setUp()" link="/classes/DatabaseBackup.TestSuite.TestCase.html#method_setUp"/>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\TestSuite" line="92" package="Default">
        <name>getAllRecords</name>
        <full_name>\DatabaseBackup\TestSuite\DriverTestCase::getAllRecords()</full_name>
        <docblock line="92">
          <description>Internal method to get all records from the database</description>
          <long-description></long-description>
          <tag name="return" line="92" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="106" package="Default">
        <name>testExport</name>
        <full_name>\DatabaseBackup\TestSuite\DriverTestCase::testExport()</full_name>
        <docblock line="106">
          <description>Test for `export()` method</description>
          <long-description></long-description>
          <tag name="return" line="106" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="test" line="106" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="122" package="Default">
        <name>testExportAndImport</name>
        <full_name>\DatabaseBackup\TestSuite\DriverTestCase::testExportAndImport()</full_name>
        <docblock line="122">
          <description>Test for `export()` and `import()` methods.</description>
          <long-description>It tests that the backup is properly exported and then imported.</long-description>
          <tag name="return" line="122" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="test" line="122" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="173" package="Default">
        <name>testExportExecutable</name>
        <full_name>\DatabaseBackup\TestSuite\DriverTestCase::testExportExecutable()</full_name>
        <docblock line="173">
          <description>Test for `_exportExecutable()` method</description>
          <long-description></long-description>
          <tag name="return" line="173" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="180" package="Default">
        <name>testExportExecutableWithCompression</name>
        <full_name>\DatabaseBackup\TestSuite\DriverTestCase::testExportExecutableWithCompression()</full_name>
        <docblock line="180">
          <description>Test for `_exportExecutableWithCompression()` method</description>
          <long-description></long-description>
          <tag name="return" line="180" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="test" line="180" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="208" package="Default">
        <name>testImport</name>
        <full_name>\DatabaseBackup\TestSuite\DriverTestCase::testImport()</full_name>
        <docblock line="208">
          <description>Test for `import()` method</description>
          <long-description></long-description>
          <tag name="return" line="208" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="test" line="208" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="221" package="Default">
        <name>testImportExecutable</name>
        <full_name>\DatabaseBackup\TestSuite\DriverTestCase::testImportExecutable()</full_name>
        <docblock line="221">
          <description>Test for `_importExecutable()` method</description>
          <long-description></long-description>
          <tag name="return" line="221" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="228" package="Default">
        <name>testImportExecutableWithCompression</name>
        <full_name>\DatabaseBackup\TestSuite\DriverTestCase::testImportExecutableWithCompression()</full_name>
        <docblock line="228">
          <description>Test for `_importExecutableWithCompression()` method</description>
          <long-description></long-description>
          <tag name="return" line="228" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="test" line="228" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="38" package="Default">
        <name>setUp</name>
        <full_name>\DatabaseBackup\TestSuite\TestCase::setUp()</full_name>
        <docblock line="38">
          <description>Called before every test method</description>
          <long-description></long-description>
          <tag name="return" line="38" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\TestSuite\TestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="49" package="Default">
        <name>tearDown</name>
        <full_name>\DatabaseBackup\TestSuite\TestCase::tearDown()</full_name>
        <docblock line="49">
          <description>Called after every test method</description>
          <long-description></long-description>
          <tag name="return" line="49" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\TestSuite\TestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\TestSuite" line="62" package="Default">
        <name>createBackup</name>
        <full_name>\DatabaseBackup\TestSuite\TestCase::createBackup()</full_name>
        <docblock line="62">
          <description>Internal method to create a backup file</description>
          <long-description></long-description>
          <tag name="param" line="62" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="62" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default>'backup.sql'</default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\TestSuite\TestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\TestSuite" line="73" package="Default">
        <name>createSomeBackups</name>
        <full_name>\DatabaseBackup\TestSuite\TestCase::createSomeBackups()</full_name>
        <docblock line="73">
          <description>Internal method to creates some backup files</description>
          <long-description></long-description>
          <tag name="param" line="73" description="&lt;p&gt;If &lt;code&gt;true&lt;/code&gt;, waits a second for each backup&lt;/p&gt;" type="boolean" variable="$sleep">
            <type>boolean</type>
          </tag>
          <tag name="return" line="73" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="uses" line="73" description="" link="\DatabaseBackup\TestSuite\TestCase::createBackup()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sleep</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\DatabaseBackup\TestSuite\TestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="DatabaseBackup\TestSuite" line="92" package="Default">
        <name>getMockForDriver</name>
        <full_name>\DatabaseBackup\TestSuite\TestCase::getMockForDriver()</full_name>
        <docblock line="92">
          <description>Internal method to mock a driver</description>
          <long-description></long-description>
          <tag name="param" line="92" description="&lt;p&gt;Driver class name&lt;/p&gt;" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="param" line="92" description="&lt;p&gt;The list of methods to mock&lt;/p&gt;" type="array" variable="$methods">
            <type>array</type>
          </tag>
          <tag name="return" line="92" description="" type="\DatabaseBackup\Driver\Driver|\PHPUnit_Framework_MockObject_MockObject">
            <type>\DatabaseBackup\Driver\Driver</type>
            <type>\PHPUnit_Framework_MockObject_MockObject</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$methods</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\DatabaseBackup\TestSuite\TestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="41" package="Default">
        <name>getAbsolutePath</name>
        <full_name>\DatabaseBackup\BackupTrait::getAbsolutePath()</full_name>
        <docblock line="41">
          <description>Returns an absolute path</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;Relative or absolute path&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\BackupTrait::getTarget()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="53" package="Default">
        <name>getBinary</name>
        <full_name>\DatabaseBackup\BackupTrait::getBinary()</full_name>
        <docblock line="53">
          <description>Gets a binary path</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Binary name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="53" description="2.0.0"/>
          <tag name="throws" line="53" description="" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="68" package="Default">
        <name>getCompression</name>
        <full_name>\DatabaseBackup\BackupTrait::getCompression()</full_name>
        <docblock line="68">
          <description>Returns the compression type from a filename</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="Compression type as string or `null`" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getExtension()"/>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getValidCompressions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="82" package="Default">
        <name>getConnection</name>
        <full_name>\DatabaseBackup\BackupTrait::getConnection()</full_name>
        <docblock line="82">
          <description>Gets the connection array</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Connection name&lt;/p&gt;" type="string|null" variable="$name">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="82" description="A connection object" type="\Cake\Datasource\ConnectionInterface">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="97" package="Default">
        <name>getDriver</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriver()</full_name>
        <docblock line="97">
          <description>Gets the driver instance containing all methods to export/import database
 backups, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="97" description="The driver instance" type="object">
            <type>object</type>
          </tag>
          <tag name="since" line="97" description="2.0.0"/>
          <tag name="throws" line="97" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getDriverName()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="118" package="Default">
        <name>getDriverName</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriverName()</full_name>
        <docblock line="118">
          <description>Gets the driver name, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="118" description="The driver name" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="118" description="2.6.2"/>
          <tag name="uses" line="118" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="132" package="Default">
        <name>getExtension</name>
        <full_name>\DatabaseBackup\BackupTrait::getExtension()</full_name>
        <docblock line="132">
          <description>Returns the extension from a filename</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="132" description="Extension or `null` if the extension is not found or&#10; if is an invalid extension" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="132" description="" link="\DatabaseBackup\BackupTrait::getValidExtensions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="143" package="Default">
        <name>getTarget</name>
        <full_name>\DatabaseBackup\BackupTrait::getTarget()</full_name>
        <docblock line="143">
          <description>Returns the target path</description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="154" package="Default">
        <name>getValidCompressions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidCompressions()</full_name>
        <docblock line="154">
          <description>Returns all valid compressions</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="154" description="2.4.0"/>
          <tag name="uses" line="154" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\TestSuite" line="165" package="Default">
        <name>getValidExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidExtensions()</full_name>
        <docblock line="165">
          <description>Returns all valid extensions</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="165" description="2.4.0"/>
          <tag name="uses" line="165" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
    </class>
  </file>
  <file path="Console/Command.php" generated-path="Console.Command.html" hash="048b71040e5208efa1ef70c1d1289a8b" package="Default">
    <docblock line="0">
      <description>This file is part of cakephp-database-backup.</description>
      <long-description>Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Mirko Pagliai"/>
      <tag name="link" line="0" description="https://github.com/mirko-pagliai/cakephp-database-backup" link="https://github.com/mirko-pagliai/cakephp-database-backup"/>
      <tag name="license" line="0" description="MIT License" link="https://opensource.org/licenses/mit-license.php"/>
      <tag name="since" line="0" description="2.6.0"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Arguments">\Cake\Console\Arguments</namespace-alias>
    <namespace-alias name="ConsoleIo">\Cake\Console\ConsoleIo</namespace-alias>
    <namespace-alias name="BackupTrait">\DatabaseBackup\BackupTrait</namespace-alias>
    <namespace-alias name="BaseCommand">\MeTools\Console\Command</namespace-alias>
    <class final="false" abstract="false" namespace="DatabaseBackup\Console" line="24" package="Default">
      <extends>\MeTools\Console\Command</extends>
      <name>Command</name>
      <full_name>\DatabaseBackup\Console\Command</full_name>
      <docblock line="24">
        <description>Base class for console commands</description>
        <long-description></long-description>
        <tag name="package" line="24" description="Default"/>
      </docblock>
      <property static="true" visibility="private" namespace="DatabaseBackup\Console" line="33" package="Default">
        <name>$validExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::$validExtensions</full_name>
        <default>array('sql.bz2' =&gt; 'bzip2', 'sql.gz' =&gt; 'gzip', 'sql' =&gt; false)</default>
        <docblock line="33">
          <description>Valid extensions. Names as keys and compressions as values</description>
          <long-description></long-description>
          <tag name="since" line="33" description="2.4.0"/>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Console" line="34" package="Default">
        <name>execute</name>
        <full_name>\DatabaseBackup\Console\Command::execute()</full_name>
        <docblock line="34">
          <description>Implement this method with your command's logic</description>
          <long-description></long-description>
          <tag name="param" line="34" description="&lt;p&gt;The command arguments&lt;/p&gt;" type="\Cake\Console\Arguments" variable="$args">
            <type>\Cake\Console\Arguments</type>
          </tag>
          <tag name="param" line="34" description="&lt;p&gt;The console io&lt;/p&gt;" type="\Cake\Console\ConsoleIo" variable="$io">
            <type>\Cake\Console\ConsoleIo</type>
          </tag>
          <tag name="return" line="34" description="The exit code or null for success" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>\Cake\Console\Arguments</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$io</name>
          <default></default>
          <type>\Cake\Console\ConsoleIo</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Console" line="41" package="Default">
        <name>getAbsolutePath</name>
        <full_name>\DatabaseBackup\BackupTrait::getAbsolutePath()</full_name>
        <docblock line="41">
          <description>Returns an absolute path</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;Relative or absolute path&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="uses" line="41" description="" link="\DatabaseBackup\BackupTrait::getTarget()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Console" line="53" package="Default">
        <name>getBinary</name>
        <full_name>\DatabaseBackup\BackupTrait::getBinary()</full_name>
        <docblock line="53">
          <description>Gets a binary path</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Binary name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="53" description="2.0.0"/>
          <tag name="throws" line="53" description="" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Console" line="68" package="Default">
        <name>getCompression</name>
        <full_name>\DatabaseBackup\BackupTrait::getCompression()</full_name>
        <docblock line="68">
          <description>Returns the compression type from a filename</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="Compression type as string or `null`" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getExtension()"/>
          <tag name="uses" line="68" description="" link="\DatabaseBackup\BackupTrait::getValidCompressions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Console" line="82" package="Default">
        <name>getConnection</name>
        <full_name>\DatabaseBackup\BackupTrait::getConnection()</full_name>
        <docblock line="82">
          <description>Gets the connection array</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Connection name&lt;/p&gt;" type="string|null" variable="$name">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="82" description="A connection object" type="\Cake\Datasource\ConnectionInterface">
            <type>\Cake\Datasource\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Console" line="97" package="Default">
        <name>getDriver</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriver()</full_name>
        <docblock line="97">
          <description>Gets the driver instance containing all methods to export/import database
 backups, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="97" description="The driver instance" type="object">
            <type>object</type>
          </tag>
          <tag name="since" line="97" description="2.0.0"/>
          <tag name="throws" line="97" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
          <tag name="uses" line="97" description="" link="\DatabaseBackup\BackupTrait::getDriverName()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Console" line="118" package="Default">
        <name>getDriverName</name>
        <full_name>\DatabaseBackup\BackupTrait::getDriverName()</full_name>
        <docblock line="118">
          <description>Gets the driver name, according to the database engine</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;A connection object&lt;/p&gt;" type="\Cake\Datasource\ConnectionInterface|null" variable="$connection">
            <type>\Cake\Datasource\ConnectionInterface</type>
            <type>null</type>
          </tag>
          <tag name="return" line="118" description="The driver name" type="string">
            <type>string</type>
          </tag>
          <tag name="since" line="118" description="2.6.2"/>
          <tag name="uses" line="118" description="" link="\DatabaseBackup\BackupTrait::getConnection()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>\Cake\Datasource\ConnectionInterface|null</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Console" line="132" package="Default">
        <name>getExtension</name>
        <full_name>\DatabaseBackup\BackupTrait::getExtension()</full_name>
        <docblock line="132">
          <description>Returns the extension from a filename</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;Filename&lt;/p&gt;" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="132" description="Extension or `null` if the extension is not found or&#10; if is an invalid extension" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="uses" line="132" description="" link="\DatabaseBackup\BackupTrait::getValidExtensions()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Console" line="143" package="Default">
        <name>getTarget</name>
        <full_name>\DatabaseBackup\BackupTrait::getTarget()</full_name>
        <docblock line="143">
          <description>Returns the target path</description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Console" line="154" package="Default">
        <name>getValidCompressions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidCompressions()</full_name>
        <docblock line="154">
          <description>Returns all valid compressions</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="154" description="2.4.0"/>
          <tag name="uses" line="154" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DatabaseBackup\Console" line="165" package="Default">
        <name>getValidExtensions</name>
        <full_name>\DatabaseBackup\BackupTrait::getValidExtensions()</full_name>
        <docblock line="165">
          <description>Returns all valid extensions</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="since" line="165" description="2.4.0"/>
          <tag name="uses" line="165" description="" link="\DatabaseBackup\BackupTrait::$validExtensions"/>
        </docblock>
        <inherited_from>\DatabaseBackup\BackupTrait</inherited_from>
      </method>
    </class>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="global" full_name="global"/>
  <namespace name="DatabaseBackup" full_name="DatabaseBackup">
    <namespace name="Command" full_name="DatabaseBackup\Command"/>
    <namespace name="Console" full_name="DatabaseBackup\Console"/>
    <namespace name="Driver" full_name="DatabaseBackup\Driver"/>
    <namespace name="TestSuite" full_name="DatabaseBackup\TestSuite"/>
    <namespace name="Utility" full_name="DatabaseBackup\Utility"/>
  </namespace>
  <deprecated count="0"/>
</project>
